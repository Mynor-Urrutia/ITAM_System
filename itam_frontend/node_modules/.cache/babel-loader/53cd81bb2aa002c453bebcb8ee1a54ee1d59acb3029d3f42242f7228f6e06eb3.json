{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\ITAM_System\\\\itam_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/Login'; // Importa el componente Login\n// Importa el Home y UserCrud que crearemos después (por ahora son placeholders)\nimport Home from './components/Home';\nimport UserCrud from './components/UserCrud';\nimport Navbar from './components/Navbar'; // ¡Importa Navbar!\nimport Sidebar from './components/Sidebar'; // ¡Importa Sidebar!\n\n// Función para verificar si hay un token de acceso guardado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  return localStorage.getItem('accessToken') !== null;\n};\nfunction App() {\n  _s();\n  // Estado para manejar si el usuario está autenticado\n  const [isLoggedIn, setIsLoggedIn] = useState(isAuthenticated());\n\n  // Función para actualizar el estado de login\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n\n  // Función para manejar el logout (borra los tokens y actualiza el estado)\n  const handleLogout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('username');\n    localStorage.removeItem('email');\n    setIsLoggedIn(false);\n    // Redireccionar al login después de desloguear\n    // navigate('/login'); // Usaríamos useNavigate aquí si App fuera un componente hijo\n  };\n\n  // Componente de prueba para HomePage y UserCrudPage temporalmente (luego los crearemos)\n  const HomePage = () => /*#__PURE__*/_jsxDEV(Home, {\n    onLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this) // Pasamos la función de logout a Home\n  ;\n  const UserCrudPage = () => /*#__PURE__*/_jsxDEV(UserCrud, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLoginSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(UserCrudPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D7TEt/MdZsMJLYhbeTHYqJmnOrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Home","UserCrud","Navbar","Sidebar","jsxDEV","_jsxDEV","isAuthenticated","localStorage","getItem","App","_s","isLoggedIn","setIsLoggedIn","handleLoginSuccess","handleLogout","removeItem","HomePage","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","UserCrudPage","children","path","element","onLoginSuccess","to","replace","_c","$RefreshReg$"],"sources":["C:/Proyectos/ITAM_System/itam_frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/Login'; // Importa el componente Login\n// Importa el Home y UserCrud que crearemos después (por ahora son placeholders)\nimport Home from './components/Home';\nimport UserCrud from './components/UserCrud';\nimport Navbar from './components/Navbar'; // ¡Importa Navbar!\nimport Sidebar from './components/Sidebar'; // ¡Importa Sidebar!\n\n// Función para verificar si hay un token de acceso guardado\nconst isAuthenticated = () => {\n  return localStorage.getItem('accessToken') !== null;\n};\n\nfunction App() {\n  // Estado para manejar si el usuario está autenticado\n  const [isLoggedIn, setIsLoggedIn] = useState(isAuthenticated());\n\n  // Función para actualizar el estado de login\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n\n  // Función para manejar el logout (borra los tokens y actualiza el estado)\n  const handleLogout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('username');\n    localStorage.removeItem('email');\n    setIsLoggedIn(false);\n    // Redireccionar al login después de desloguear\n    // navigate('/login'); // Usaríamos useNavigate aquí si App fuera un componente hijo\n  };\n\n\n  // Componente de prueba para HomePage y UserCrudPage temporalmente (luego los crearemos)\n  const HomePage = () => (\n    <Home onLogout={handleLogout} /> // Pasamos la función de logout a Home\n  );\n  const UserCrudPage = () => (\n    <UserCrud />\n  );\n\n  return (\n    <Router>\n      <Routes>\n        {/* Ruta para el login */}\n        <Route path=\"/login\" element={<Login onLoginSuccess={handleLoginSuccess} />} />\n\n        {/* Rutas protegidas */}\n        <Route\n          path=\"/\"\n          element={isLoggedIn ? <HomePage /> : <Navigate to=\"/login\" replace />}\n        />\n        <Route\n          path=\"/users\"\n          element={isLoggedIn ? <UserCrudPage /> : <Navigate to=\"/login\" replace />}\n        />\n\n        {/* Redirección para cualquier otra ruta no definida */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}