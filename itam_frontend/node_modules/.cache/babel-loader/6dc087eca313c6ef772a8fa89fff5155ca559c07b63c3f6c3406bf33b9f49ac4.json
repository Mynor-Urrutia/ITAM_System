{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\ITAM_System\\\\itam_frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// C:\\Proyectos\\ITAM_System\\itam_frontend\\src\\components\\PrivateRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  requiredPermissions = []\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading,\n    hasPermission\n  } = useAuth();\n  if (loading) {\n    // Muestra un estado de carga mientras se verifica la autenticación\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen text-2xl\",\n      children: \"Verificando acceso...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n  if (!isAuthenticated) {\n    // Si no está autenticado, redirige al login\n    toast.error(\"Necesitas iniciar sesión para acceder a esta página.\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Verifica si se requieren permisos y si el usuario los tiene\n  if (requiredPermissions.length > 0) {\n    const authorized = requiredPermissions.every(permission => hasPermission(permission));\n    if (!authorized) {\n      // Si no tiene los permisos requeridos, redirige a una página de inicio\n      // o muestra un mensaje de acceso denegado\n      toast.error(\"No tienes los permisos necesarios para acceder a esta función.\");\n      // Puedes redirigir a /home o mostrar un componente de \"Acceso Denegado\"\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/home\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  // Si está autenticado y tiene los permisos, renderiza el componente hijo\n  return children;\n};\n_s(PrivateRoute, \"Mr4ARaPuRAAKGfcb08RW+wCAnk8=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","toast","jsxDEV","_jsxDEV","PrivateRoute","children","requiredPermissions","_s","isAuthenticated","loading","hasPermission","className","fileName","_jsxFileName","lineNumber","columnNumber","error","to","replace","length","authorized","every","permission","_c","$RefreshReg$"],"sources":["C:/Proyectos/ITAM_System/itam_frontend/src/components/PrivateRoute.js"],"sourcesContent":["// C:\\Proyectos\\ITAM_System\\itam_frontend\\src\\components\\PrivateRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst PrivateRoute = ({ children, requiredPermissions = [] }) => {\r\n    const { isAuthenticated, loading, hasPermission } = useAuth();\r\n\r\n    if (loading) {\r\n        // Muestra un estado de carga mientras se verifica la autenticación\r\n        return <div className=\"flex justify-center items-center h-screen text-2xl\">Verificando acceso...</div>;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        // Si no está autenticado, redirige al login\r\n        toast.error(\"Necesitas iniciar sesión para acceder a esta página.\");\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    // Verifica si se requieren permisos y si el usuario los tiene\r\n    if (requiredPermissions.length > 0) {\r\n        const authorized = requiredPermissions.every(permission => hasPermission(permission));\r\n        if (!authorized) {\r\n            // Si no tiene los permisos requeridos, redirige a una página de inicio\r\n            // o muestra un mensaje de acceso denegado\r\n            toast.error(\"No tienes los permisos necesarios para acceder a esta función.\");\r\n            // Puedes redirigir a /home o mostrar un componente de \"Acceso Denegado\"\r\n            return <Navigate to=\"/home\" replace />; \r\n        }\r\n    }\r\n\r\n    // Si está autenticado y tiene los permisos, renderiza el componente hijo\r\n    return children;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,mBAAmB,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM;IAAEC,eAAe;IAAEC,OAAO;IAAEC;EAAc,CAAC,GAAGV,OAAO,CAAC,CAAC;EAE7D,IAAIS,OAAO,EAAE;IACT;IACA,oBAAON,OAAA;MAAKQ,SAAS,EAAC,oDAAoD;MAAAN,QAAA,EAAC;IAAqB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1G;EAEA,IAAI,CAACP,eAAe,EAAE;IAClB;IACAP,KAAK,CAACe,KAAK,CAAC,sDAAsD,CAAC;IACnE,oBAAOb,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA,IAAIT,mBAAmB,CAACa,MAAM,GAAG,CAAC,EAAE;IAChC,MAAMC,UAAU,GAAGd,mBAAmB,CAACe,KAAK,CAACC,UAAU,IAAIZ,aAAa,CAACY,UAAU,CAAC,CAAC;IACrF,IAAI,CAACF,UAAU,EAAE;MACb;MACA;MACAnB,KAAK,CAACe,KAAK,CAAC,gEAAgE,CAAC;MAC7E;MACA,oBAAOb,OAAA,CAACJ,QAAQ;QAACkB,EAAE,EAAC,OAAO;QAACC,OAAO;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC1C;EACJ;;EAEA;EACA,OAAOV,QAAQ;AACnB,CAAC;AAACE,EAAA,CA5BIH,YAAY;EAAA,QACsCJ,OAAO;AAAA;AAAAuB,EAAA,GADzDnB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}