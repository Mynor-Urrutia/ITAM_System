{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\ITAM_System\\\\itam_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// C:\\Proyectos\\ITAM_System\\itam_frontend\\src\\App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './context/AuthContext'; // Import AuthProvider and useAuth\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Login from './components/Login';\nimport Home from './components/Home'; // Assuming Home is your dashboard\n// Import other components that need authentication, e.g., UserCrud, RoleManagement\nimport UserCrud from './components/UserCrud';\n// import RoleManagement from './components/RoleManagement'; // If you have this\n\n// A component that handles routes based on authentication status\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContent = () => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth(); // Use useAuth here\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando aplicaci\\xF3n...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this); // Or a spinner\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        element: /*#__PURE__*/_jsxDEV(UserCrud, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // Redirect unauthenticated users to login for any protected route\n    _jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(AppContent, \"F3aPsg481KjBH7Z7iYl6LJifZz0=\", false, function () {\n  return [useAuth];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","AuthProvider","useAuth","ToastContainer","Login","Home","UserCrud","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContent","_s","isAuthenticated","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","_c2","$RefreshReg$"],"sources":["C:/Proyectos/ITAM_System/itam_frontend/src/App.js"],"sourcesContent":["// C:\\Proyectos\\ITAM_System\\itam_frontend\\src\\App.js\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './context/AuthContext'; // Import AuthProvider and useAuth\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Login from './components/Login';\r\nimport Home from './components/Home'; // Assuming Home is your dashboard\r\n// Import other components that need authentication, e.g., UserCrud, RoleManagement\r\nimport UserCrud from './components/UserCrud';\r\n// import RoleManagement from './components/RoleManagement'; // If you have this\r\n\r\n// A component that handles routes based on authentication status\r\nconst AppContent = () => {\r\n    const { isAuthenticated, loading } = useAuth(); // Use useAuth here\r\n\r\n    if (loading) {\r\n        return <div>Cargando aplicaci√≥n...</div>; // Or a spinner\r\n    }\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/login\" element={<Login />} />\r\n            {/* Protected Routes - only accessible if authenticated */}\r\n            {isAuthenticated ? (\r\n                <>\r\n                    <Route path=\"/home\" element={<Home />} />\r\n                    <Route path=\"/users\" element={<UserCrud />} /> {/* Example protected route */}\r\n                    {/* <Route path=\"/roles\" element={<RoleManagement />} /> */}\r\n                    {/* Add more protected routes here */}\r\n                    <Route path=\"/\" element={<Home />} /> {/* Default authenticated route */}\r\n                </>\r\n            ) : (\r\n                // Redirect unauthenticated users to login for any protected route\r\n                <Route path=\"*\" element={<Login />} />\r\n            )}\r\n        </Routes>\r\n    );\r\n};\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <ToastContainer position=\"top-right\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n            <AuthProvider> {/* <--- THIS IS THE KEY! Wrap your entire application logic with AuthProvider */}\r\n                <AppContent />\r\n            </AuthProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}