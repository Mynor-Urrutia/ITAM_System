{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\ITAM_System\\\\itam_frontend\\\\src\\\\components\\\\RoleManagement.js\",\n  _s = $RefreshSig$();\n// C:\\Proyectos\\ITAM_System\\itam_frontend\\src\\components\\RoleManagement.js\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axiosConfig'; // Asegúrate de que este archivo está configurado\nimport { useAuth } from '../context/AuthContext';\nimport { toast } from 'react-toastify'; // Para notificaciones\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoleManagement() {\n  _s();\n  const {\n    hasPermission\n  } = useAuth();\n  const [roles, setRoles] = useState([]); // Lista de roles existentes\n  const [permissions, setPermissions] = useState([]); // Lista de todos los permisos disponibles\n  const [newRoleName, setNewRoleName] = useState(''); // Estado para el nombre del nuevo rol o el rol a editar\n  const [selectedPermissions, setSelectedPermissions] = useState(new Set()); // IDs de permisos seleccionados para el rol\n  const [editingRole, setEditingRole] = useState(null); // Rol que se está editando (null si estamos creando)\n  const [loading, setLoading] = useState(true); // Estado de carga\n  const [error, setError] = useState(null); // Estado de error\n\n  // Permisos necesarios para las acciones en el frontend\n  const canAddRole = hasPermission('auth.add_group');\n  const canChangeRole = hasPermission('auth.change_group');\n  const canDeleteRole = hasPermission('auth.delete_group');\n  const canViewRole = hasPermission('auth.view_group');\n  const canViewPermission = hasPermission('auth.view_permission'); // Para mostrar el checklist de permisos\n\n  // useEffect para cargar roles y permisos al montar el componente\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // Cargar roles si el usuario tiene permiso\n        if (canViewRole) {\n          const rolesResponse = await axios.get('/roles/');\n          setRoles(rolesResponse.data);\n        } else {\n          toast.error(\"No tienes permiso para ver los roles.\");\n        }\n\n        // Cargar todos los permisos disponibles si el usuario tiene permiso\n        if (canViewPermission) {\n          const permissionsResponse = await axios.get('/permissions/');\n          setPermissions(permissionsResponse.data);\n        } else {\n          toast.warn(\"No tienes permiso para ver la lista de permisos disponibles.\");\n        }\n        setLoading(false);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(err);\n        setLoading(false);\n        toast.error(`Error al cargar datos: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message}`);\n      }\n    };\n    fetchData();\n  }, [canViewRole, canViewPermission]); // Se ejecuta cuando cambian los permisos de vista\n\n  // Manejador para crear un nuevo rol\n  const handleCreateRole = async e => {\n    e.preventDefault();\n    if (!canAddRole) {\n      toast.error(\"No tienes permiso para crear roles.\");\n      return;\n    }\n    if (!newRoleName.trim()) {\n      // Validar que el nombre no esté vacío\n      toast.warn(\"El nombre del rol no puede estar vacío.\");\n      return;\n    }\n    try {\n      const response = await axios.post('/roles/', {\n        name: newRoleName,\n        // Convierte el Set de IDs a un Array para la API\n        permission_ids: Array.from(selectedPermissions)\n      });\n      setRoles([...roles, response.data]); // Añade el nuevo rol a la lista\n      setNewRoleName(''); // Limpia el campo de nombre\n      setSelectedPermissions(new Set()); // Limpia las selecciones de permisos\n      toast.success(\"Rol creado exitosamente.\");\n    } catch (err) {\n      var _err$response2, _err$response2$data, _err$response2$data$n, _err$response3, _err$response3$data;\n      // Manejo de errores desde el backend (ej. nombre de rol duplicado)\n      toast.error(`Error al crear rol: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : (_err$response2$data$n = _err$response2$data.name) === null || _err$response2$data$n === void 0 ? void 0 : _err$response2$data$n[0]) || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || err.message}`);\n    }\n  };\n\n  // Manejador para iniciar la edición de un rol\n  const handleEditRole = role => {\n    if (!canChangeRole) {\n      toast.error(\"No tienes permiso para editar roles.\");\n      return;\n    }\n    setEditingRole(role); // Establece el rol que se va a editar\n    setNewRoleName(role.name); // Carga el nombre actual del rol en el input\n    // Carga los IDs de los permisos actuales del rol en el Set de selección\n    setSelectedPermissions(new Set(role.permissions.map(p => p.id)));\n  };\n\n  // Manejador para actualizar un rol existente\n  const handleUpdateRole = async e => {\n    e.preventDefault();\n    if (!canChangeRole) {\n      toast.error(\"No tienes permiso para actualizar roles.\");\n      return;\n    }\n    if (!editingRole || !newRoleName.trim()) {\n      toast.warn(\"Nombre de rol o rol a editar inválido.\");\n      return;\n    }\n    try {\n      const response = await axios.put(`/roles/${editingRole.id}/`, {\n        name: newRoleName,\n        permission_ids: Array.from(selectedPermissions)\n      });\n      // Actualiza el rol en la lista de roles\n      setRoles(roles.map(role => role.id === editingRole.id ? response.data : role));\n      setEditingRole(null); // Sale del modo edición\n      setNewRoleName('');\n      setSelectedPermissions(new Set());\n      toast.success(\"Rol actualizado exitosamente.\");\n    } catch (err) {\n      var _err$response4, _err$response4$data, _err$response4$data$n, _err$response5, _err$response5$data;\n      toast.error(`Error al actualizar rol: ${((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : (_err$response4$data$n = _err$response4$data.name) === null || _err$response4$data$n === void 0 ? void 0 : _err$response4$data$n[0]) || ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.detail) || err.message}`);\n    }\n  };\n\n  // Manejador para eliminar un rol\n  const handleDeleteRole = async roleId => {\n    if (!canDeleteRole) {\n      toast.error(\"No tienes permiso para eliminar roles.\");\n      return;\n    }\n    if (window.confirm('¿Estás seguro de que quieres eliminar este rol?')) {\n      try {\n        await axios.delete(`/roles/${roleId}/`);\n        setRoles(roles.filter(role => role.id !== roleId)); // Elimina el rol de la lista\n        toast.success(\"Rol eliminado exitosamente.\");\n      } catch (err) {\n        var _err$response6, _err$response6$data;\n        toast.error(`Error al eliminar rol: ${((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.detail) || err.message}`);\n      }\n    }\n  };\n\n  // Manejador para los checkboxes de permisos\n  const handlePermissionChange = permissionId => {\n    setSelectedPermissions(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(permissionId)) {\n        newSet.delete(permissionId); // Deseleccionar si ya está seleccionado\n      } else {\n        newSet.add(permissionId); // Seleccionar si no está seleccionado\n      }\n      return newSet;\n    });\n  };\n\n  // Mostrar estado de carga o error\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-gray-700\",\n    children: \"Cargando roles y permisos...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 25\n  }, this);\n  // Mostrar mensaje si no hay permiso para ver roles\n  if (!canViewRole && !loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-red-600\",\n    children: \"No tienes autorizaci\\xF3n para ver esta secci\\xF3n.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 42\n  }, this);\n  // Mostrar errores generales si los hay\n  if (error && canViewRole) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-red-600\",\n    children: [\"Error: \", error.message, \". Por favor, recarga la p\\xE1gina.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 38\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"Gesti\\xF3n de Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), (canAddRole || canChangeRole) && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingRole ? handleUpdateRole : handleCreateRole,\n      className: \"mb-8 p-6 border rounded-lg bg-gray-50 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-gray-700\",\n        children: editingRole ? 'Editar Rol Existente' : 'Crear Nuevo Rol'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"roleName\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Nombre del Rol:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"roleName\",\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          value: newRoleName,\n          onChange: e => setNewRoleName(e.target.value),\n          required: true,\n          disabled: !canAddRole && !canChangeRole // Deshabilita si no hay permiso\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), canViewPermission && permissions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Asignar Permisos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 p-4 border rounded bg-white max-h-80 overflow-y-auto\",\n          children: permissions.sort((a, b) => a.name.localeCompare(b.name)) // Ordenar permisos alfabéticamente\n          .map(perm => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `perm-${perm.id}`,\n              checked: selectedPermissions.has(perm.id),\n              onChange: () => handlePermissionChange(perm.id),\n              className: \"form-checkbox h-4 w-4 text-blue-600 rounded\",\n              disabled: !canAddRole && !canChangeRole // Deshabilita checkboxes si no hay permiso\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `perm-${perm.id}`,\n              className: \"ml-2 text-gray-700 text-sm cursor-pointer\",\n              children: [perm.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500 text-xs\",\n                children: [\"(\", perm.codename, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 41\n            }, this)]\n          }, perm.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }, this), !canViewPermission && (canAddRole || canChangeRole) && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-6 text-gray-600 text-sm\",\n        children: [\"No tienes permiso para ver la lista completa de permisos, pero a\\xFAn puedes \", editingRole ? 'editar el nombre del rol' : 'crear un rol sin asignar permisos específicos aquí', \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-3\",\n        children: [(canAddRole || canChangeRole) && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\",\n          children: editingRole ? 'Actualizar Rol' : 'Crear Rol'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }, this), editingRole && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setEditingRole(null);\n            setNewRoleName('');\n            setSelectedPermissions(new Set());\n          },\n          className: \"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-5 rounded-lg focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4 text-gray-700\",\n      children: \"Roles Existentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), canViewRole ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto rounded-lg shadow-sm border border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider border-b\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider border-b\",\n              children: \"Nombre del Rol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider border-b\",\n              children: \"Permisos Asignados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-center text-sm font-semibold text-gray-600 uppercase tracking-wider border-b\",\n              children: \"Acciones\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: roles.length > 0 ? roles.map(role => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b last:border-b-0 hover:bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm text-gray-800\",\n              children: role.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm text-gray-800 font-medium\",\n              children: role.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-sm text-gray-700\",\n              children: role.permissions && role.permissions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc list-inside space-y-1\",\n                children: role.permissions.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"text-xs text-gray-600\",\n                  children: p.name\n                }, p.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500 text-xs italic\",\n                children: \"Ninguno\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-center\",\n              children: [canChangeRole && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditRole(role),\n                className: \"bg-yellow-500 hover:bg-yellow-600 text-white text-xs py-1.5 px-3 rounded-md mr-2 transition duration-150 ease-in-out\",\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 49\n              }, this), canDeleteRole && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteRole(role.id),\n                className: \"bg-red-500 hover:bg-red-600 text-white text-xs py-1.5 px-3 rounded-md transition duration-150 ease-in-out\",\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 49\n              }, this), !(canChangeRole || canDeleteRole) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500 text-xs italic\",\n                children: \"Sin acciones\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 41\n            }, this)]\n          }, role.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              className: \"py-4 text-center text-gray-500 text-sm\",\n              children: \"No hay roles para mostrar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600\",\n      children: \"No tienes permiso para listar los roles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n_s(RoleManagement, \"6BhAHLMMsKfSTKvLseKJrj5aKZM=\", false, function () {\n  return [useAuth];\n});\n_c = RoleManagement;\nexport default RoleManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","toast","jsxDEV","_jsxDEV","RoleManagement","_s","hasPermission","roles","setRoles","permissions","setPermissions","newRoleName","setNewRoleName","selectedPermissions","setSelectedPermissions","Set","editingRole","setEditingRole","loading","setLoading","error","setError","canAddRole","canChangeRole","canDeleteRole","canViewRole","canViewPermission","fetchData","rolesResponse","get","data","permissionsResponse","warn","err","_err$response","_err$response$data","response","detail","message","handleCreateRole","e","preventDefault","trim","post","name","permission_ids","Array","from","success","_err$response2","_err$response2$data","_err$response2$data$n","_err$response3","_err$response3$data","handleEditRole","role","map","p","id","handleUpdateRole","put","_err$response4","_err$response4$data","_err$response4$data$n","_err$response5","_err$response5$data","handleDeleteRole","roleId","window","confirm","delete","filter","_err$response6","_err$response6$data","handlePermissionChange","permissionId","prev","newSet","has","add","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","disabled","length","sort","a","b","localeCompare","perm","checked","codename","onClick","colSpan","_c","$RefreshReg$"],"sources":["C:/Proyectos/ITAM_System/itam_frontend/src/components/RoleManagement.js"],"sourcesContent":["// C:\\Proyectos\\ITAM_System\\itam_frontend\\src\\components\\RoleManagement.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from '../axiosConfig'; // Asegúrate de que este archivo está configurado\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { toast } from 'react-toastify'; // Para notificaciones\r\n\r\nfunction RoleManagement() {\r\n    const { hasPermission } = useAuth();\r\n    const [roles, setRoles] = useState([]); // Lista de roles existentes\r\n    const [permissions, setPermissions] = useState([]); // Lista de todos los permisos disponibles\r\n    const [newRoleName, setNewRoleName] = useState(''); // Estado para el nombre del nuevo rol o el rol a editar\r\n    const [selectedPermissions, setSelectedPermissions] = useState(new Set()); // IDs de permisos seleccionados para el rol\r\n    const [editingRole, setEditingRole] = useState(null); // Rol que se está editando (null si estamos creando)\r\n    const [loading, setLoading] = useState(true); // Estado de carga\r\n    const [error, setError] = useState(null); // Estado de error\r\n\r\n    // Permisos necesarios para las acciones en el frontend\r\n    const canAddRole = hasPermission('auth.add_group');\r\n    const canChangeRole = hasPermission('auth.change_group');\r\n    const canDeleteRole = hasPermission('auth.delete_group');\r\n    const canViewRole = hasPermission('auth.view_group');\r\n    const canViewPermission = hasPermission('auth.view_permission'); // Para mostrar el checklist de permisos\r\n\r\n    // useEffect para cargar roles y permisos al montar el componente\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                // Cargar roles si el usuario tiene permiso\r\n                if (canViewRole) {\r\n                    const rolesResponse = await axios.get('/roles/');\r\n                    setRoles(rolesResponse.data);\r\n                } else {\r\n                    toast.error(\"No tienes permiso para ver los roles.\");\r\n                }\r\n                \r\n                // Cargar todos los permisos disponibles si el usuario tiene permiso\r\n                if (canViewPermission) {\r\n                    const permissionsResponse = await axios.get('/permissions/');\r\n                    setPermissions(permissionsResponse.data);\r\n                } else {\r\n                    toast.warn(\"No tienes permiso para ver la lista de permisos disponibles.\");\r\n                }\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError(err);\r\n                setLoading(false);\r\n                toast.error(`Error al cargar datos: ${err.response?.data?.detail || err.message}`);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [canViewRole, canViewPermission]); // Se ejecuta cuando cambian los permisos de vista\r\n\r\n    // Manejador para crear un nuevo rol\r\n    const handleCreateRole = async (e) => {\r\n        e.preventDefault();\r\n        if (!canAddRole) {\r\n            toast.error(\"No tienes permiso para crear roles.\");\r\n            return;\r\n        }\r\n        if (!newRoleName.trim()) { // Validar que el nombre no esté vacío\r\n            toast.warn(\"El nombre del rol no puede estar vacío.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/roles/', {\r\n                name: newRoleName,\r\n                // Convierte el Set de IDs a un Array para la API\r\n                permission_ids: Array.from(selectedPermissions) \r\n            });\r\n            setRoles([...roles, response.data]); // Añade el nuevo rol a la lista\r\n            setNewRoleName(''); // Limpia el campo de nombre\r\n            setSelectedPermissions(new Set()); // Limpia las selecciones de permisos\r\n            toast.success(\"Rol creado exitosamente.\");\r\n        } catch (err) {\r\n            // Manejo de errores desde el backend (ej. nombre de rol duplicado)\r\n            toast.error(`Error al crear rol: ${err.response?.data?.name?.[0] || err.response?.data?.detail || err.message}`);\r\n        }\r\n    };\r\n\r\n    // Manejador para iniciar la edición de un rol\r\n    const handleEditRole = (role) => {\r\n        if (!canChangeRole) {\r\n            toast.error(\"No tienes permiso para editar roles.\");\r\n            return;\r\n        }\r\n        setEditingRole(role); // Establece el rol que se va a editar\r\n        setNewRoleName(role.name); // Carga el nombre actual del rol en el input\r\n        // Carga los IDs de los permisos actuales del rol en el Set de selección\r\n        setSelectedPermissions(new Set(role.permissions.map(p => p.id))); \r\n    };\r\n\r\n    // Manejador para actualizar un rol existente\r\n    const handleUpdateRole = async (e) => {\r\n        e.preventDefault();\r\n        if (!canChangeRole) {\r\n            toast.error(\"No tienes permiso para actualizar roles.\");\r\n            return;\r\n        }\r\n        if (!editingRole || !newRoleName.trim()) {\r\n            toast.warn(\"Nombre de rol o rol a editar inválido.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.put(`/roles/${editingRole.id}/`, {\r\n                name: newRoleName,\r\n                permission_ids: Array.from(selectedPermissions)\r\n            });\r\n            // Actualiza el rol en la lista de roles\r\n            setRoles(roles.map(role => (role.id === editingRole.id ? response.data : role)));\r\n            setEditingRole(null); // Sale del modo edición\r\n            setNewRoleName('');\r\n            setSelectedPermissions(new Set());\r\n            toast.success(\"Rol actualizado exitosamente.\");\r\n        } catch (err) {\r\n            toast.error(`Error al actualizar rol: ${err.response?.data?.name?.[0] || err.response?.data?.detail || err.message}`);\r\n        }\r\n    };\r\n\r\n    // Manejador para eliminar un rol\r\n    const handleDeleteRole = async (roleId) => {\r\n        if (!canDeleteRole) {\r\n            toast.error(\"No tienes permiso para eliminar roles.\");\r\n            return;\r\n        }\r\n        if (window.confirm('¿Estás seguro de que quieres eliminar este rol?')) {\r\n            try {\r\n                await axios.delete(`/roles/${roleId}/`);\r\n                setRoles(roles.filter(role => role.id !== roleId)); // Elimina el rol de la lista\r\n                toast.success(\"Rol eliminado exitosamente.\");\r\n            } catch (err) {\r\n                toast.error(`Error al eliminar rol: ${err.response?.data?.detail || err.message}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Manejador para los checkboxes de permisos\r\n    const handlePermissionChange = (permissionId) => {\r\n        setSelectedPermissions(prev => {\r\n            const newSet = new Set(prev);\r\n            if (newSet.has(permissionId)) {\r\n                newSet.delete(permissionId); // Deseleccionar si ya está seleccionado\r\n            } else {\r\n                newSet.add(permissionId); // Seleccionar si no está seleccionado\r\n            }\r\n            return newSet;\r\n        });\r\n    };\r\n\r\n    // Mostrar estado de carga o error\r\n    if (loading) return <div className=\"p-6 text-gray-700\">Cargando roles y permisos...</div>;\r\n    // Mostrar mensaje si no hay permiso para ver roles\r\n    if (!canViewRole && !loading) return <div className=\"p-6 text-red-600\">No tienes autorización para ver esta sección.</div>; \r\n    // Mostrar errores generales si los hay\r\n    if (error && canViewRole) return <div className=\"p-6 text-red-600\">Error: {error.message}. Por favor, recarga la página.</div>;\r\n\r\n    return (\r\n        <div className=\"p-6 bg-white rounded-lg shadow-md\">\r\n            <h1 className=\"text-3xl font-bold mb-6 text-gray-800\">Gestión de Roles</h1>\r\n\r\n            {/* Formulario de Creación/Edición de Roles */}\r\n            {(canAddRole || canChangeRole) && (\r\n                <form onSubmit={editingRole ? handleUpdateRole : handleCreateRole} className=\"mb-8 p-6 border rounded-lg bg-gray-50 shadow-sm\">\r\n                    <h2 className=\"text-2xl font-semibold mb-4 text-gray-700\">{editingRole ? 'Editar Rol Existente' : 'Crear Nuevo Rol'}</h2>\r\n                    \r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"roleName\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            Nombre del Rol:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"roleName\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            value={newRoleName}\r\n                            onChange={(e) => setNewRoleName(e.target.value)}\r\n                            required\r\n                            disabled={!canAddRole && !canChangeRole} // Deshabilita si no hay permiso\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Sección de Permisos */}\r\n                    {canViewPermission && permissions.length > 0 && (\r\n                        <div className=\"mb-6\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                Asignar Permisos:\r\n                            </label>\r\n                            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 p-4 border rounded bg-white max-h-80 overflow-y-auto\">\r\n                                {permissions\r\n                                    .sort((a, b) => a.name.localeCompare(b.name)) // Ordenar permisos alfabéticamente\r\n                                    .map(perm => (\r\n                                    <div key={perm.id} className=\"flex items-center\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id={`perm-${perm.id}`}\r\n                                            checked={selectedPermissions.has(perm.id)}\r\n                                            onChange={() => handlePermissionChange(perm.id)}\r\n                                            className=\"form-checkbox h-4 w-4 text-blue-600 rounded\"\r\n                                            disabled={!canAddRole && !canChangeRole} // Deshabilita checkboxes si no hay permiso\r\n                                        />\r\n                                        <label htmlFor={`perm-${perm.id}`} className=\"ml-2 text-gray-700 text-sm cursor-pointer\">\r\n                                            {perm.name} <span className=\"text-gray-500 text-xs\">({perm.codename})</span>\r\n                                        </label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {/* Mensaje si no hay permisos para ver la lista de permisos */}\r\n                    {!canViewPermission && (canAddRole || canChangeRole) && (\r\n                        <p className=\"mb-6 text-gray-600 text-sm\">No tienes permiso para ver la lista completa de permisos, pero aún puedes {editingRole ? 'editar el nombre del rol' : 'crear un rol sin asignar permisos específicos aquí'}.</p>\r\n                    )}\r\n\r\n\r\n                    <div className=\"flex justify-end space-x-3\">\r\n                        {(canAddRole || canChangeRole) && (\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\"\r\n                            >\r\n                                {editingRole ? 'Actualizar Rol' : 'Crear Rol'}\r\n                            </button>\r\n                        )}\r\n                        {editingRole && (\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    setEditingRole(null);\r\n                                    setNewRoleName('');\r\n                                    setSelectedPermissions(new Set());\r\n                                }}\r\n                                className=\"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-5 rounded-lg focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\"\r\n                            >\r\n                                Cancelar\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {/* Tabla de Roles Existentes */}\r\n            <h2 className=\"text-2xl font-semibold mb-4 text-gray-700\">Roles Existentes</h2>\r\n            {canViewRole ? (\r\n                <div className=\"overflow-x-auto rounded-lg shadow-sm border border-gray-200\">\r\n                    <table className=\"min-w-full bg-white\">\r\n                        <thead className=\"bg-gray-100\">\r\n                            <tr>\r\n                                <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider border-b\">ID</th>\r\n                                <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider border-b\">Nombre del Rol</th>\r\n                                <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider border-b\">Permisos Asignados</th>\r\n                                <th className=\"py-3 px-4 text-center text-sm font-semibold text-gray-600 uppercase tracking-wider border-b\">Acciones</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {roles.length > 0 ? (\r\n                                roles.map(role => (\r\n                                    <tr key={role.id} className=\"border-b last:border-b-0 hover:bg-gray-50\">\r\n                                        <td className=\"py-3 px-4 text-sm text-gray-800\">{role.id}</td>\r\n                                        <td className=\"py-3 px-4 text-sm text-gray-800 font-medium\">{role.name}</td>\r\n                                        <td className=\"py-3 px-4 text-sm text-gray-700\">\r\n                                            {role.permissions && role.permissions.length > 0 ? (\r\n                                                <ul className=\"list-disc list-inside space-y-1\">\r\n                                                    {role.permissions.map(p => (\r\n                                                        <li key={p.id} className=\"text-xs text-gray-600\">{p.name}</li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            ) : (\r\n                                                <span className=\"text-gray-500 text-xs italic\">Ninguno</span>\r\n                                            )}\r\n                                        </td>\r\n                                        <td className=\"py-3 px-4 text-center\">\r\n                                            {canChangeRole && (\r\n                                                <button\r\n                                                    onClick={() => handleEditRole(role)}\r\n                                                    className=\"bg-yellow-500 hover:bg-yellow-600 text-white text-xs py-1.5 px-3 rounded-md mr-2 transition duration-150 ease-in-out\"\r\n                                                >\r\n                                                    Editar\r\n                                                </button>\r\n                                            )}\r\n                                            {canDeleteRole && (\r\n                                                <button\r\n                                                    onClick={() => handleDeleteRole(role.id)}\r\n                                                    className=\"bg-red-500 hover:bg-red-600 text-white text-xs py-1.5 px-3 rounded-md transition duration-150 ease-in-out\"\r\n                                                >\r\n                                                    Eliminar\r\n                                                </button>\r\n                                            )}\r\n                                            {!(canChangeRole || canDeleteRole) && (\r\n                                                <span className=\"text-gray-500 text-xs italic\">Sin acciones</span>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            ) : (\r\n                                <tr>\r\n                                    <td colSpan=\"4\" className=\"py-4 text-center text-gray-500 text-sm\">No hay roles para mostrar.</td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            ) : (\r\n                <p className=\"text-red-600\">No tienes permiso para listar los roles.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoleManagement;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,gBAAgB,CAAC,CAAC;AACpC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,KAAK,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAc,CAAC,GAAGN,OAAO,CAAC,CAAC;EACnC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACgB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjB,QAAQ,CAAC,IAAIkB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMyB,UAAU,GAAGhB,aAAa,CAAC,gBAAgB,CAAC;EAClD,MAAMiB,aAAa,GAAGjB,aAAa,CAAC,mBAAmB,CAAC;EACxD,MAAMkB,aAAa,GAAGlB,aAAa,CAAC,mBAAmB,CAAC;EACxD,MAAMmB,WAAW,GAAGnB,aAAa,CAAC,iBAAiB,CAAC;EACpD,MAAMoB,iBAAiB,GAAGpB,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;;EAEjE;EACAR,SAAS,CAAC,MAAM;IACZ,MAAM6B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BR,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA;QACA,IAAIM,WAAW,EAAE;UACb,MAAMG,aAAa,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,SAAS,CAAC;UAChDrB,QAAQ,CAACoB,aAAa,CAACE,IAAI,CAAC;QAChC,CAAC,MAAM;UACH7B,KAAK,CAACmB,KAAK,CAAC,uCAAuC,CAAC;QACxD;;QAEA;QACA,IAAIM,iBAAiB,EAAE;UACnB,MAAMK,mBAAmB,GAAG,MAAMhC,KAAK,CAAC8B,GAAG,CAAC,eAAe,CAAC;UAC5DnB,cAAc,CAACqB,mBAAmB,CAACD,IAAI,CAAC;QAC5C,CAAC,MAAM;UACH7B,KAAK,CAAC+B,IAAI,CAAC,8DAA8D,CAAC;QAC9E;QACAb,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOc,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACVd,QAAQ,CAACY,GAAG,CAAC;QACbd,UAAU,CAAC,KAAK,CAAC;QACjBlB,KAAK,CAACmB,KAAK,CAAC,0BAA0B,EAAAc,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcJ,IAAI,cAAAK,kBAAA,uBAAlBA,kBAAA,CAAoBE,MAAM,KAAIJ,GAAG,CAACK,OAAO,EAAE,CAAC;MACtF;IACJ,CAAC;IACDX,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,WAAW,EAAEC,iBAAiB,CAAC,CAAC,CAAC,CAAC;;EAEtC;EACA,MAAMa,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACnB,UAAU,EAAE;MACbrB,KAAK,CAACmB,KAAK,CAAC,qCAAqC,CAAC;MAClD;IACJ;IACA,IAAI,CAACT,WAAW,CAAC+B,IAAI,CAAC,CAAC,EAAE;MAAE;MACvBzC,KAAK,CAAC+B,IAAI,CAAC,yCAAyC,CAAC;MACrD;IACJ;IAEA,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMrC,KAAK,CAAC4C,IAAI,CAAC,SAAS,EAAE;QACzCC,IAAI,EAAEjC,WAAW;QACjB;QACAkC,cAAc,EAAEC,KAAK,CAACC,IAAI,CAAClC,mBAAmB;MAClD,CAAC,CAAC;MACFL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE6B,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC;MACrClB,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;MACpBE,sBAAsB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACnCd,KAAK,CAAC+C,OAAO,CAAC,0BAA0B,CAAC;IAC7C,CAAC,CAAC,OAAOf,GAAG,EAAE;MAAA,IAAAgB,cAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,cAAA,EAAAC,mBAAA;MACV;MACApD,KAAK,CAACmB,KAAK,CAAC,uBAAuB,EAAA6B,cAAA,GAAAhB,GAAG,CAACG,QAAQ,cAAAa,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcnB,IAAI,cAAAoB,mBAAA,wBAAAC,qBAAA,GAAlBD,mBAAA,CAAoBN,IAAI,cAAAO,qBAAA,uBAAxBA,qBAAA,CAA2B,CAAC,CAAC,OAAAC,cAAA,GAAInB,GAAG,CAACG,QAAQ,cAAAgB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAActB,IAAI,cAAAuB,mBAAA,uBAAlBA,mBAAA,CAAoBhB,MAAM,KAAIJ,GAAG,CAACK,OAAO,EAAE,CAAC;IACpH;EACJ,CAAC;;EAED;EACA,MAAMgB,cAAc,GAAIC,IAAI,IAAK;IAC7B,IAAI,CAAChC,aAAa,EAAE;MAChBtB,KAAK,CAACmB,KAAK,CAAC,sCAAsC,CAAC;MACnD;IACJ;IACAH,cAAc,CAACsC,IAAI,CAAC,CAAC,CAAC;IACtB3C,cAAc,CAAC2C,IAAI,CAACX,IAAI,CAAC,CAAC,CAAC;IAC3B;IACA9B,sBAAsB,CAAC,IAAIC,GAAG,CAACwC,IAAI,CAAC9C,WAAW,CAAC+C,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,CAAC,CAAC;EACpE,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAOnB,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAClB,aAAa,EAAE;MAChBtB,KAAK,CAACmB,KAAK,CAAC,0CAA0C,CAAC;MACvD;IACJ;IACA,IAAI,CAACJ,WAAW,IAAI,CAACL,WAAW,CAAC+B,IAAI,CAAC,CAAC,EAAE;MACrCzC,KAAK,CAAC+B,IAAI,CAAC,wCAAwC,CAAC;MACpD;IACJ;IAEA,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMrC,KAAK,CAAC6D,GAAG,CAAC,UAAU5C,WAAW,CAAC0C,EAAE,GAAG,EAAE;QAC1Dd,IAAI,EAAEjC,WAAW;QACjBkC,cAAc,EAAEC,KAAK,CAACC,IAAI,CAAClC,mBAAmB;MAClD,CAAC,CAAC;MACF;MACAL,QAAQ,CAACD,KAAK,CAACiD,GAAG,CAACD,IAAI,IAAKA,IAAI,CAACG,EAAE,KAAK1C,WAAW,CAAC0C,EAAE,GAAGtB,QAAQ,CAACN,IAAI,GAAGyB,IAAK,CAAC,CAAC;MAChFtC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACtBL,cAAc,CAAC,EAAE,CAAC;MAClBE,sBAAsB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;MACjCd,KAAK,CAAC+C,OAAO,CAAC,+BAA+B,CAAC;IAClD,CAAC,CAAC,OAAOf,GAAG,EAAE;MAAA,IAAA4B,cAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,cAAA,EAAAC,mBAAA;MACVhE,KAAK,CAACmB,KAAK,CAAC,4BAA4B,EAAAyC,cAAA,GAAA5B,GAAG,CAACG,QAAQ,cAAAyB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc/B,IAAI,cAAAgC,mBAAA,wBAAAC,qBAAA,GAAlBD,mBAAA,CAAoBlB,IAAI,cAAAmB,qBAAA,uBAAxBA,qBAAA,CAA2B,CAAC,CAAC,OAAAC,cAAA,GAAI/B,GAAG,CAACG,QAAQ,cAAA4B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAclC,IAAI,cAAAmC,mBAAA,uBAAlBA,mBAAA,CAAoB5B,MAAM,KAAIJ,GAAG,CAACK,OAAO,EAAE,CAAC;IACzH;EACJ,CAAC;;EAED;EACA,MAAM4B,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACvC,IAAI,CAAC3C,aAAa,EAAE;MAChBvB,KAAK,CAACmB,KAAK,CAAC,wCAAwC,CAAC;MACrD;IACJ;IACA,IAAIgD,MAAM,CAACC,OAAO,CAAC,iDAAiD,CAAC,EAAE;MACnE,IAAI;QACA,MAAMtE,KAAK,CAACuE,MAAM,CAAC,UAAUH,MAAM,GAAG,CAAC;QACvC3D,QAAQ,CAACD,KAAK,CAACgE,MAAM,CAAChB,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKS,MAAM,CAAC,CAAC,CAAC,CAAC;QACpDlE,KAAK,CAAC+C,OAAO,CAAC,6BAA6B,CAAC;MAChD,CAAC,CAAC,OAAOf,GAAG,EAAE;QAAA,IAAAuC,cAAA,EAAAC,mBAAA;QACVxE,KAAK,CAACmB,KAAK,CAAC,0BAA0B,EAAAoD,cAAA,GAAAvC,GAAG,CAACG,QAAQ,cAAAoC,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc1C,IAAI,cAAA2C,mBAAA,uBAAlBA,mBAAA,CAAoBpC,MAAM,KAAIJ,GAAG,CAACK,OAAO,EAAE,CAAC;MACtF;IACJ;EACJ,CAAC;;EAED;EACA,MAAMoC,sBAAsB,GAAIC,YAAY,IAAK;IAC7C7D,sBAAsB,CAAC8D,IAAI,IAAI;MAC3B,MAAMC,MAAM,GAAG,IAAI9D,GAAG,CAAC6D,IAAI,CAAC;MAC5B,IAAIC,MAAM,CAACC,GAAG,CAACH,YAAY,CAAC,EAAE;QAC1BE,MAAM,CAACP,MAAM,CAACK,YAAY,CAAC,CAAC,CAAC;MACjC,CAAC,MAAM;QACHE,MAAM,CAACE,GAAG,CAACJ,YAAY,CAAC,CAAC,CAAC;MAC9B;MACA,OAAOE,MAAM;IACjB,CAAC,CAAC;EACN,CAAC;;EAED;EACA,IAAI3D,OAAO,EAAE,oBAAOf,OAAA;IAAK6E,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAAC;EAA4B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzF;EACA,IAAI,CAAC5D,WAAW,IAAI,CAACP,OAAO,EAAE,oBAAOf,OAAA;IAAK6E,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAAC;EAA6C;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC1H;EACA,IAAIjE,KAAK,IAAIK,WAAW,EAAE,oBAAOtB,OAAA;IAAK6E,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAAC,SAAO,EAAC7D,KAAK,CAACkB,OAAO,EAAC,oCAA+B;EAAA;IAAA4C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE9H,oBACIlF,OAAA;IAAK6E,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAC9C9E,OAAA;MAAI6E,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG1E,CAAC/D,UAAU,IAAIC,aAAa,kBACzBpB,OAAA;MAAMmF,QAAQ,EAAEtE,WAAW,GAAG2C,gBAAgB,GAAGpB,gBAAiB;MAACyC,SAAS,EAAC,iDAAiD;MAAAC,QAAA,gBAC1H9E,OAAA;QAAI6E,SAAS,EAAC,2CAA2C;QAAAC,QAAA,EAAEjE,WAAW,GAAG,sBAAsB,GAAG;MAAiB;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEzHlF,OAAA;QAAK6E,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjB9E,OAAA;UAAOoF,OAAO,EAAC,UAAU;UAACP,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EAAC;QAEjF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRlF,OAAA;UACIqF,IAAI,EAAC,MAAM;UACX9B,EAAE,EAAC,UAAU;UACbsB,SAAS,EAAC,4HAA4H;UACtIS,KAAK,EAAE9E,WAAY;UACnB+E,QAAQ,EAAGlD,CAAC,IAAK5B,cAAc,CAAC4B,CAAC,CAACmD,MAAM,CAACF,KAAK,CAAE;UAChDG,QAAQ;UACRC,QAAQ,EAAE,CAACvE,UAAU,IAAI,CAACC,aAAc,CAAC;QAAA;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EAGL3D,iBAAiB,IAAIjB,WAAW,CAACqF,MAAM,GAAG,CAAC,iBACxC3F,OAAA;QAAK6E,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjB9E,OAAA;UAAO6E,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EAAC;QAE9D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRlF,OAAA;UAAK6E,SAAS,EAAC,2GAA2G;UAAAC,QAAA,EACrHxE,WAAW,CACPsF,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACpD,IAAI,CAACsD,aAAa,CAACD,CAAC,CAACrD,IAAI,CAAC,CAAC,CAAC;UAAA,CAC7CY,GAAG,CAAC2C,IAAI,iBACThG,OAAA;YAAmB6E,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAC5C9E,OAAA;cACIqF,IAAI,EAAC,UAAU;cACf9B,EAAE,EAAE,QAAQyC,IAAI,CAACzC,EAAE,EAAG;cACtB0C,OAAO,EAAEvF,mBAAmB,CAACiE,GAAG,CAACqB,IAAI,CAACzC,EAAE,CAAE;cAC1CgC,QAAQ,EAAEA,CAAA,KAAMhB,sBAAsB,CAACyB,IAAI,CAACzC,EAAE,CAAE;cAChDsB,SAAS,EAAC,6CAA6C;cACvDa,QAAQ,EAAE,CAACvE,UAAU,IAAI,CAACC,aAAc,CAAC;YAAA;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C,CAAC,eACFlF,OAAA;cAAOoF,OAAO,EAAE,QAAQY,IAAI,CAACzC,EAAE,EAAG;cAACsB,SAAS,EAAC,2CAA2C;cAAAC,QAAA,GACnFkB,IAAI,CAACvD,IAAI,EAAC,GAAC,eAAAzC,OAAA;gBAAM6E,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,GAAC,GAAC,EAACkB,IAAI,CAACE,QAAQ,EAAC,GAAC;cAAA;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzE,CAAC;UAAA,GAXFc,IAAI,CAACzC,EAAE;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYZ,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR,EAEA,CAAC3D,iBAAiB,KAAKJ,UAAU,IAAIC,aAAa,CAAC,iBAChDpB,OAAA;QAAG6E,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,+EAA0E,EAACjE,WAAW,GAAG,0BAA0B,GAAG,oDAAoD,EAAC,GAAC;MAAA;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC5N,eAGDlF,OAAA;QAAK6E,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GACtC,CAAC3D,UAAU,IAAIC,aAAa,kBACzBpB,OAAA;UACIqF,IAAI,EAAC,QAAQ;UACbR,SAAS,EAAC,qJAAqJ;UAAAC,QAAA,EAE9JjE,WAAW,GAAG,gBAAgB,GAAG;QAAW;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CACX,EACArE,WAAW,iBACRb,OAAA;UACIqF,IAAI,EAAC,QAAQ;UACbc,OAAO,EAAEA,CAAA,KAAM;YACXrF,cAAc,CAAC,IAAI,CAAC;YACpBL,cAAc,CAAC,EAAE,CAAC;YAClBE,sBAAsB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;UACrC,CAAE;UACFiE,SAAS,EAAC,qJAAqJ;UAAAC,QAAA,EAClK;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACT,eAGDlF,OAAA;MAAI6E,SAAS,EAAC,2CAA2C;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9E5D,WAAW,gBACRtB,OAAA;MAAK6E,SAAS,EAAC,6DAA6D;MAAAC,QAAA,eACxE9E,OAAA;QAAO6E,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClC9E,OAAA;UAAO6E,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1B9E,OAAA;YAAA8E,QAAA,gBACI9E,OAAA;cAAI6E,SAAS,EAAC,2FAA2F;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjHlF,OAAA;cAAI6E,SAAS,EAAC,2FAA2F;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7HlF,OAAA;cAAI6E,SAAS,EAAC,2FAA2F;cAAAC,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjIlF,OAAA;cAAI6E,SAAS,EAAC,6FAA6F;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRlF,OAAA;UAAA8E,QAAA,EACK1E,KAAK,CAACuF,MAAM,GAAG,CAAC,GACbvF,KAAK,CAACiD,GAAG,CAACD,IAAI,iBACVpD,OAAA;YAAkB6E,SAAS,EAAC,2CAA2C;YAAAC,QAAA,gBACnE9E,OAAA;cAAI6E,SAAS,EAAC,iCAAiC;cAAAC,QAAA,EAAE1B,IAAI,CAACG;YAAE;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9DlF,OAAA;cAAI6E,SAAS,EAAC,6CAA6C;cAAAC,QAAA,EAAE1B,IAAI,CAACX;YAAI;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5ElF,OAAA;cAAI6E,SAAS,EAAC,iCAAiC;cAAAC,QAAA,EAC1C1B,IAAI,CAAC9C,WAAW,IAAI8C,IAAI,CAAC9C,WAAW,CAACqF,MAAM,GAAG,CAAC,gBAC5C3F,OAAA;gBAAI6E,SAAS,EAAC,iCAAiC;gBAAAC,QAAA,EAC1C1B,IAAI,CAAC9C,WAAW,CAAC+C,GAAG,CAACC,CAAC,iBACnBtD,OAAA;kBAAe6E,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAExB,CAAC,CAACb;gBAAI,GAA/Ca,CAAC,CAACC,EAAE;kBAAAwB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgD,CAChE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,gBAELlF,OAAA;gBAAM6E,SAAS,EAAC,8BAA8B;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAC/D;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACLlF,OAAA;cAAI6E,SAAS,EAAC,uBAAuB;cAAAC,QAAA,GAChC1D,aAAa,iBACVpB,OAAA;gBACImG,OAAO,EAAEA,CAAA,KAAMhD,cAAc,CAACC,IAAI,CAAE;gBACpCyB,SAAS,EAAC,sHAAsH;gBAAAC,QAAA,EACnI;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACX,EACA7D,aAAa,iBACVrB,OAAA;gBACImG,OAAO,EAAEA,CAAA,KAAMpC,gBAAgB,CAACX,IAAI,CAACG,EAAE,CAAE;gBACzCsB,SAAS,EAAC,2GAA2G;gBAAAC,QAAA,EACxH;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACX,EACA,EAAE9D,aAAa,IAAIC,aAAa,CAAC,iBAC9BrB,OAAA;gBAAM6E,SAAS,EAAC,8BAA8B;gBAAAC,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACpE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA,GAlCA9B,IAAI,CAACG,EAAE;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmCZ,CACP,CAAC,gBAEFlF,OAAA;YAAA8E,QAAA,eACI9E,OAAA;cAAIoG,OAAO,EAAC,GAAG;cAACvB,SAAS,EAAC,wCAAwC;cAAAC,QAAA,EAAC;YAA0B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClG;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,gBAENlF,OAAA;MAAG6E,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAChF,EAAA,CA7SQD,cAAc;EAAA,QACOJ,OAAO;AAAA;AAAAwG,EAAA,GAD5BpG,cAAc;AA+SvB,eAAeA,cAAc;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}