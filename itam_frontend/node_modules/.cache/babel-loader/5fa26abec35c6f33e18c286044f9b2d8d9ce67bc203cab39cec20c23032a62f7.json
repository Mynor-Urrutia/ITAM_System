{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\ITAM_System\\\\itam_frontend\\\\src\\\\pages\\\\masterdata\\\\ModeloComputoFormModal.js\",\n  _s = $RefreshSig$();\n// itam_frontend/src/pages/masterdata/ModeloComputoFormModal.js\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../../components/Modal';\nimport { createModeloComputo, updateModeloComputo, getMarcas, getTiposActivos } from '../../api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormData = {\n  marca: '',\n  tipo_activo: '',\n  codigo_interno: '',\n  serie: '',\n  procesador: '',\n  ram: '',\n  almacenamiento: '',\n  tarjeta_grafica: '',\n  interfaz_wifi: true,\n  interfaz_ethernet: true,\n  interfaz_serial_paralelo: false,\n  serie_cargador: '',\n  cuenta_con_docking: false,\n  serie_docking: '',\n  cuenta_con_pantalla: false,\n  serie_pantalla: '',\n  cuenta_con_teclado: false,\n  serie_teclado: '',\n  cuenta_con_mouse: false,\n  serie_mouse: '',\n  cuenta_con_mochila: false\n};\nconst ModeloComputoFormModal = ({\n  show,\n  onClose,\n  onSaveSuccess,\n  modeloToEdit\n}) => {\n  _s();\n  const [formData, setFormData] = useState(initialFormData);\n  const [marcas, setMarcas] = useState([]);\n  const [tiposActivos, setTiposActivos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    // Cargar datos para selects\n    const loadDependencies = async () => {\n      try {\n        const [marcasRes, tiposRes] = await Promise.all([getMarcas(), getTiposActivos()]);\n        setMarcas(marcasRes.data);\n        setTiposActivos(tiposRes.data);\n      } catch (error) {\n        console.error('Error cargando dependencias:', error);\n        toast.error('Error al cargar marcas o tipos de activos.');\n      }\n    };\n    loadDependencies();\n\n    // Cargar datos para edición\n    if (modeloToEdit) {\n      setFormData({\n        ...modeloToEdit,\n        // Asegurar que los IDs sean números si es necesario\n        marca: modeloToEdit.marca || '',\n        tipo_activo: modeloToEdit.tipo_activo || '',\n        // Asegurar valores por defecto para campos opcionales\n        serie_docking: modeloToEdit.serie_docking || '',\n        serie_pantalla: modeloToEdit.serie_pantalla || '',\n        serie_teclado: modeloToEdit.serie_teclado || '',\n        serie_mouse: modeloToEdit.serie_mouse || '',\n        tarjeta_grafica: modeloToEdit.tarjeta_grafica || '',\n        serie_cargador: modeloToEdit.serie_cargador || ''\n      });\n    } else {\n      setFormData(initialFormData);\n    }\n  }, [modeloToEdit]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setFormData(prev => ({\n      ...prev,\n      [name]: newValue\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [name]: null\n    }));\n  };\n\n  // Validación específica para campos condicionales\n  const validateConditionalFields = (data, newErrors) => {\n    if (data.cuenta_con_docking && !data.serie_docking) {\n      newErrors.serie_docking = 'La serie de docking es obligatoria si cuenta con docking.';\n    }\n    if (data.cuenta_con_pantalla && !data.serie_pantalla) {\n      newErrors.serie_pantalla = 'La serie de pantalla es obligatoria si cuenta con pantalla.';\n    }\n    if (data.cuenta_con_teclado && !data.serie_teclado) {\n      newErrors.serie_teclado = 'La serie de teclado es obligatoria si cuenta con teclado.';\n    }\n    if (data.cuenta_con_mouse && !data.serie_mouse) {\n      newErrors.serie_mouse = 'La serie de mouse es obligatoria si cuenta con mouse.';\n    }\n  };\n  const validate = data => {\n    const newErrors = {};\n    if (!data.marca) newErrors.marca = 'La marca es obligatoria.';\n    if (!data.tipo_activo) newErrors.tipo_activo = 'El tipo de activo es obligatorio.';\n    if (!data.codigo_interno) newErrors.codigo_interno = 'El código interno es obligatorio.';\n    if (!data.serie) newErrors.serie = 'La serie es obligatoria.';\n    if (!data.procesador) newErrors.procesador = 'El procesador es obligatorio.';\n    if (!data.ram) newErrors.ram = 'La RAM es obligatoria.';\n    if (!data.almacenamiento) newErrors.almacenamiento = 'El almacenamiento es obligatorio.';\n    validateConditionalFields(data, newErrors);\n    return newErrors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const findErrors = validate(formData);\n    if (Object.keys(findErrors).length > 0) {\n      setErrors(findErrors);\n      toast.error('Por favor, corrige los errores del formulario.');\n      return;\n    }\n    setLoading(true);\n    try {\n      if (modeloToEdit) {\n        await updateModeloComputo(modeloToEdit.id, formData);\n        toast.success('Modelo de cómputo actualizado exitosamente!');\n      } else {\n        await createModeloComputo(formData);\n        toast.success('Modelo de cómputo creado exitosamente!');\n      }\n      onSaveSuccess();\n      onClose();\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Error saving modelo:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      const apiErrors = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n      if (apiErrors) {\n        setErrors(prev => ({\n          ...prev,\n          ...apiErrors\n        }));\n      }\n      const errorMsg = (apiErrors === null || apiErrors === void 0 ? void 0 : apiErrors.detail) || 'Error al guardar el modelo de cómputo.';\n      toast.error(errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para manejar el cambio de checkbox y limpiar el campo de serie asociado si se desmarca\n  const handleAccessoryChange = (e, seriesFieldName) => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: checked,\n      // Limpiar el campo de serie si se desmarca el accesorio\n      [seriesFieldName]: checked ? prev[seriesFieldName] : ''\n    }));\n  };\n  const renderInput = (label, name, type = 'text', required = true, isConditional = false, seriesFieldName = null) => {\n    const isCheckbox = type === 'checkbox';\n    const isSelect = type === 'select';\n    const isSeriesField = seriesFieldName !== null;\n    let isDisabled = false;\n    if (isSeriesField) {\n      // Ejemplo: si es serie_docking, está deshabilitado si cuenta_con_docking es false\n      const controlField = seriesFieldName.replace('serie_', 'cuenta_con_');\n      isDisabled = !formData[controlField];\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-gray-700\",\n        children: [label, \" \", required && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-500\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), isSelect ? /*#__PURE__*/_jsxDEV(\"select\", {\n        name: name,\n        value: formData[name] || '',\n        onChange: handleChange,\n        className: `mt-1 block w-full rounded-md border-gray-300 shadow-sm ${errors[name] ? 'border-red-500' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Seleccione...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), (name === 'marca' ? marcas : tiposActivos).map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this) : isCheckbox ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: name,\n        checked: formData[name],\n        onChange: isConditional ? e => handleAccessoryChange(e, seriesFieldName) : handleChange,\n        className: \"mt-1 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        name: name,\n        value: formData[name] || '',\n        onChange: handleChange,\n        className: `mt-1 block w-full rounded-md border-gray-300 shadow-sm ${errors[name] ? 'border-red-500' : ''}`,\n        disabled: isDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), errors[name] && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-sm text-red-600\",\n        children: errors[name]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 34\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onClose: onClose,\n    title: modeloToEdit ? \"Editar Modelo de Cómputo\" : \"Crear Modelo de Cómputo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: [renderInput('Marca', 'marca', 'select'), renderInput('Tipo de Activo', 'tipo_activo', 'select'), renderInput('Código Interno', 'codigo_interno'), renderInput('Serie', 'serie'), renderInput('Procesador', 'procesador'), renderInput('RAM', 'ram'), renderInput('Almacenamiento', 'almacenamiento'), renderInput('Tarjeta Gráfica', 'tarjeta_grafica', 'text', false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-1 md:col-span-2 lg:col-span-3 border-t pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-700 mb-2\",\n            children: \"Interfaces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-4\",\n            children: [renderInput('Interfaz WiFi', 'interfaz_wifi', 'checkbox', false), renderInput('Interfaz Ethernet', 'interfaz_ethernet', 'checkbox', false), renderInput('Interfaz Serial/Paralelo', 'interfaz_serial_paralelo', 'checkbox', false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-1 md:col-span-2 lg:col-span-3 border-t pt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-700 mb-2\",\n            children: \"Accesorios y Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), renderInput('Serie de Cargador', 'serie_cargador', 'text', false), renderInput('Cuenta con Docking', 'cuenta_con_docking', 'checkbox', false, true, 'serie_docking'), renderInput('Serie de Docking', 'serie_docking', 'text', false, false, 'serie_docking'), renderInput('Cuenta con Pantalla', 'cuenta_con_pantalla', 'checkbox', false, true, 'serie_pantalla'), renderInput('Serie de Pantalla', 'serie_pantalla', 'text', false, false, 'serie_pantalla'), renderInput('Cuenta con Teclado', 'cuenta_con_teclado', 'checkbox', false, true, 'serie_teclado'), renderInput('Serie de Teclado', 'serie_teclado', 'text', false, false, 'serie_teclado'), renderInput('Cuenta con Mouse', 'cuenta_con_mouse', 'checkbox', false, true, 'serie_mouse'), renderInput('Serie de Mouse', 'serie_mouse', 'text', false, false, 'serie_mouse'), renderInput('Cuenta con Mochila', 'cuenta_con_mochila', 'checkbox', false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-2 border-t pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          className: \"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50\",\n          disabled: loading,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n          disabled: loading,\n          children: loading ? 'Guardando...' : 'Guardar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this);\n};\n_s(ModeloComputoFormModal, \"MdEFA62xw1BiuoYwHxjui7Ai5yk=\");\n_c = ModeloComputoFormModal;\nexport default ModeloComputoFormModal;\nvar _c;\n$RefreshReg$(_c, \"ModeloComputoFormModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","createModeloComputo","updateModeloComputo","getMarcas","getTiposActivos","toast","jsxDEV","_jsxDEV","initialFormData","marca","tipo_activo","codigo_interno","serie","procesador","ram","almacenamiento","tarjeta_grafica","interfaz_wifi","interfaz_ethernet","interfaz_serial_paralelo","serie_cargador","cuenta_con_docking","serie_docking","cuenta_con_pantalla","serie_pantalla","cuenta_con_teclado","serie_teclado","cuenta_con_mouse","serie_mouse","cuenta_con_mochila","ModeloComputoFormModal","show","onClose","onSaveSuccess","modeloToEdit","_s","formData","setFormData","marcas","setMarcas","tiposActivos","setTiposActivos","loading","setLoading","errors","setErrors","loadDependencies","marcasRes","tiposRes","Promise","all","data","error","console","handleChange","e","name","value","type","checked","target","newValue","prev","validateConditionalFields","newErrors","validate","handleSubmit","preventDefault","findErrors","Object","keys","length","id","success","_error$response","_error$response2","response","message","apiErrors","errorMsg","detail","handleAccessoryChange","seriesFieldName","renderInput","label","required","isConditional","isCheckbox","isSelect","isSeriesField","isDisabled","controlField","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","item","disabled","title","onSubmit","onClick","_c","$RefreshReg$"],"sources":["C:/Proyectos/ITAM_System/itam_frontend/src/pages/masterdata/ModeloComputoFormModal.js"],"sourcesContent":["// itam_frontend/src/pages/masterdata/ModeloComputoFormModal.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport { createModeloComputo, updateModeloComputo, getMarcas, getTiposActivos } from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst initialFormData = {\r\n    marca: '',\r\n    tipo_activo: '',\r\n    codigo_interno: '',\r\n    serie: '',\r\n    procesador: '',\r\n    ram: '',\r\n    almacenamiento: '',\r\n    tarjeta_grafica: '',\r\n    interfaz_wifi: true,\r\n    interfaz_ethernet: true,\r\n    interfaz_serial_paralelo: false,\r\n    serie_cargador: '',\r\n    cuenta_con_docking: false,\r\n    serie_docking: '',\r\n    cuenta_con_pantalla: false,\r\n    serie_pantalla: '',\r\n    cuenta_con_teclado: false,\r\n    serie_teclado: '',\r\n    cuenta_con_mouse: false,\r\n    serie_mouse: '',\r\n    cuenta_con_mochila: false,\r\n};\r\n\r\nconst ModeloComputoFormModal = ({ show, onClose, onSaveSuccess, modeloToEdit }) => {\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [marcas, setMarcas] = useState([]);\r\n    const [tiposActivos, setTiposActivos] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        // Cargar datos para selects\r\n        const loadDependencies = async () => {\r\n            try {\r\n                const [marcasRes, tiposRes] = await Promise.all([getMarcas(), getTiposActivos()]);\r\n                setMarcas(marcasRes.data);\r\n                setTiposActivos(tiposRes.data);\r\n            } catch (error) {\r\n                console.error('Error cargando dependencias:', error);\r\n                toast.error('Error al cargar marcas o tipos de activos.');\r\n            }\r\n        };\r\n        loadDependencies();\r\n\r\n        // Cargar datos para edición\r\n        if (modeloToEdit) {\r\n            setFormData({\r\n                ...modeloToEdit,\r\n                // Asegurar que los IDs sean números si es necesario\r\n                marca: modeloToEdit.marca || '',\r\n                tipo_activo: modeloToEdit.tipo_activo || '',\r\n                // Asegurar valores por defecto para campos opcionales\r\n                serie_docking: modeloToEdit.serie_docking || '',\r\n                serie_pantalla: modeloToEdit.serie_pantalla || '',\r\n                serie_teclado: modeloToEdit.serie_teclado || '',\r\n                serie_mouse: modeloToEdit.serie_mouse || '',\r\n                tarjeta_grafica: modeloToEdit.tarjeta_grafica || '',\r\n                serie_cargador: modeloToEdit.serie_cargador || '',\r\n            });\r\n        } else {\r\n            setFormData(initialFormData);\r\n        }\r\n    }, [modeloToEdit]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        const newValue = type === 'checkbox' ? checked : value;\r\n\r\n        setFormData(prev => ({ ...prev, [name]: newValue }));\r\n        setErrors(prev => ({ ...prev, [name]: null }));\r\n    };\r\n\r\n    // Validación específica para campos condicionales\r\n    const validateConditionalFields = (data, newErrors) => {\r\n        if (data.cuenta_con_docking && !data.serie_docking) {\r\n            newErrors.serie_docking = 'La serie de docking es obligatoria si cuenta con docking.';\r\n        }\r\n        if (data.cuenta_con_pantalla && !data.serie_pantalla) {\r\n            newErrors.serie_pantalla = 'La serie de pantalla es obligatoria si cuenta con pantalla.';\r\n        }\r\n        if (data.cuenta_con_teclado && !data.serie_teclado) {\r\n            newErrors.serie_teclado = 'La serie de teclado es obligatoria si cuenta con teclado.';\r\n        }\r\n        if (data.cuenta_con_mouse && !data.serie_mouse) {\r\n            newErrors.serie_mouse = 'La serie de mouse es obligatoria si cuenta con mouse.';\r\n        }\r\n    };\r\n\r\n    const validate = (data) => {\r\n        const newErrors = {};\r\n        if (!data.marca) newErrors.marca = 'La marca es obligatoria.';\r\n        if (!data.tipo_activo) newErrors.tipo_activo = 'El tipo de activo es obligatorio.';\r\n        if (!data.codigo_interno) newErrors.codigo_interno = 'El código interno es obligatorio.';\r\n        if (!data.serie) newErrors.serie = 'La serie es obligatoria.';\r\n        if (!data.procesador) newErrors.procesador = 'El procesador es obligatorio.';\r\n        if (!data.ram) newErrors.ram = 'La RAM es obligatoria.';\r\n        if (!data.almacenamiento) newErrors.almacenamiento = 'El almacenamiento es obligatorio.';\r\n\r\n        validateConditionalFields(data, newErrors);\r\n        \r\n        return newErrors;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const findErrors = validate(formData);\r\n        \r\n        if (Object.keys(findErrors).length > 0) {\r\n            setErrors(findErrors);\r\n            toast.error('Por favor, corrige los errores del formulario.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            if (modeloToEdit) {\r\n                await updateModeloComputo(modeloToEdit.id, formData);\r\n                toast.success('Modelo de cómputo actualizado exitosamente!');\r\n            } else {\r\n                await createModeloComputo(formData);\r\n                toast.success('Modelo de cómputo creado exitosamente!');\r\n            }\r\n            onSaveSuccess();\r\n            onClose();\r\n        } catch (error) {\r\n            console.error('Error saving modelo:', error.response?.data || error.message);\r\n            const apiErrors = error.response?.data;\r\n            if (apiErrors) {\r\n                setErrors(prev => ({ ...prev, ...apiErrors }));\r\n            }\r\n            const errorMsg = apiErrors?.detail || 'Error al guardar el modelo de cómputo.';\r\n            toast.error(errorMsg);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n    // Función para manejar el cambio de checkbox y limpiar el campo de serie asociado si se desmarca\r\n    const handleAccessoryChange = (e, seriesFieldName) => {\r\n        const { name, checked } = e.target;\r\n        setFormData(prev => ({ \r\n            ...prev, \r\n            [name]: checked,\r\n            // Limpiar el campo de serie si se desmarca el accesorio\r\n            [seriesFieldName]: checked ? prev[seriesFieldName] : ''\r\n        }));\r\n    };\r\n\r\n    const renderInput = (label, name, type = 'text', required = true, isConditional = false, seriesFieldName = null) => {\r\n        const isCheckbox = type === 'checkbox';\r\n        const isSelect = type === 'select';\r\n        \r\n        const isSeriesField = seriesFieldName !== null;\r\n        let isDisabled = false;\r\n        if (isSeriesField) {\r\n            // Ejemplo: si es serie_docking, está deshabilitado si cuenta_con_docking es false\r\n            const controlField = seriesFieldName.replace('serie_', 'cuenta_con_');\r\n            isDisabled = !formData[controlField];\r\n        }\r\n\r\n        return (\r\n            <div key={name} className=\"relative\">\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                    {label} {required && <span className=\"text-red-500\">*</span>}\r\n                </label>\r\n                \r\n                {isSelect ? (\r\n                    <select\r\n                        name={name}\r\n                        value={formData[name] || ''}\r\n                        onChange={handleChange}\r\n                        className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm ${errors[name] ? 'border-red-500' : ''}`}\r\n                    >\r\n                        <option value=\"\">Seleccione...</option>\r\n                        {(name === 'marca' ? marcas : tiposActivos).map(item => (\r\n                            <option key={item.id} value={item.id}>{item.name}</option>\r\n                        ))}\r\n                    </select>\r\n                ) : isCheckbox ? (\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name={name}\r\n                        checked={formData[name]}\r\n                        onChange={isConditional ? (e) => handleAccessoryChange(e, seriesFieldName) : handleChange}\r\n                        className=\"mt-1 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                    />\r\n                ) : (\r\n                    <input\r\n                        type={type}\r\n                        name={name}\r\n                        value={formData[name] || ''}\r\n                        onChange={handleChange}\r\n                        className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm ${errors[name] ? 'border-red-500' : ''}`}\r\n                        disabled={isDisabled}\r\n                    />\r\n                )}\r\n                \r\n                {errors[name] && <p className=\"mt-1 text-sm text-red-600\">{errors[name]}</p>}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal \r\n            show={show} \r\n            onClose={onClose} \r\n            title={modeloToEdit ? \"Editar Modelo de Cómputo\" : \"Crear Modelo de Cómputo\"}\r\n        >\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    {/* RELACIONES */}\r\n                    {renderInput('Marca', 'marca', 'select')}\r\n                    {renderInput('Tipo de Activo', 'tipo_activo', 'select')}\r\n\r\n                    {/* IDENTIFICACIÓN */}\r\n                    {renderInput('Código Interno', 'codigo_interno')}\r\n                    {renderInput('Serie', 'serie')}\r\n\r\n                    {/* ESPECIFICACIONES */}\r\n                    {renderInput('Procesador', 'procesador')}\r\n                    {renderInput('RAM', 'ram')}\r\n                    {renderInput('Almacenamiento', 'almacenamiento')}\r\n                    {renderInput('Tarjeta Gráfica', 'tarjeta_grafica', 'text', false)}\r\n                    \r\n                    {/* INTERFACES */}\r\n                    <div className=\"col-span-1 md:col-span-2 lg:col-span-3 border-t pt-4\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Interfaces</h3>\r\n                        <div className=\"grid grid-cols-3 gap-4\">\r\n                            {renderInput('Interfaz WiFi', 'interfaz_wifi', 'checkbox', false)}\r\n                            {renderInput('Interfaz Ethernet', 'interfaz_ethernet', 'checkbox', false)}\r\n                            {renderInput('Interfaz Serial/Paralelo', 'interfaz_serial_paralelo', 'checkbox', false)}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* ACCESORIOS */}\r\n                    <div className=\"col-span-1 md:col-span-2 lg:col-span-3 border-t pt-4\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Accesorios y Series</h3>\r\n                    </div>\r\n\r\n                    {/* Cargador */}\r\n                    {renderInput('Serie de Cargador', 'serie_cargador', 'text', false)}\r\n\r\n                    {/* Docking */}\r\n                    {renderInput('Cuenta con Docking', 'cuenta_con_docking', 'checkbox', false, true, 'serie_docking')}\r\n                    {renderInput('Serie de Docking', 'serie_docking', 'text', false, false, 'serie_docking')}\r\n\r\n                    {/* Pantalla */}\r\n                    {renderInput('Cuenta con Pantalla', 'cuenta_con_pantalla', 'checkbox', false, true, 'serie_pantalla')}\r\n                    {renderInput('Serie de Pantalla', 'serie_pantalla', 'text', false, false, 'serie_pantalla')}\r\n\r\n                    {/* Teclado */}\r\n                    {renderInput('Cuenta con Teclado', 'cuenta_con_teclado', 'checkbox', false, true, 'serie_teclado')}\r\n                    {renderInput('Serie de Teclado', 'serie_teclado', 'text', false, false, 'serie_teclado')}\r\n\r\n                    {/* Mouse */}\r\n                    {renderInput('Cuenta con Mouse', 'cuenta_con_mouse', 'checkbox', false, true, 'serie_mouse')}\r\n                    {renderInput('Serie de Mouse', 'serie_mouse', 'text', false, false, 'serie_mouse')}\r\n                    \r\n                    {/* Mochila */}\r\n                    {renderInput('Cuenta con Mochila', 'cuenta_con_mochila', 'checkbox', false)}\r\n\r\n                </div>\r\n                <div className=\"flex justify-end space-x-2 border-t pt-4\">\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50\"\r\n                        disabled={loading}\r\n                    >\r\n                        Cancelar\r\n                    </button>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? 'Guardando...' : 'Guardar'}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModeloComputoFormModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}