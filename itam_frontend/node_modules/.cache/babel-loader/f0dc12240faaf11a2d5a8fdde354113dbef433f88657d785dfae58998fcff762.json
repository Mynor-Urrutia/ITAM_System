{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\ITAM_System\\\\itam_frontend\\\\src\\\\components\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// IMPORTANTE: Asumimos que has cambiado el import de axiosConfig a api para usar las funciones definidas\nimport api from '../api';\nimport { getRegions, getDepartamentos } from '../api'; // Importa las nuevas funciones\nimport { toast } from 'react-toastify';\n\n// Opciones para los campos de selección estáticos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PUESTO_CHOICES = ['Gerente', 'Coordinador', 'Analista', 'Técnico', 'Desarrollador', 'Soporte', 'Otro'];\nconst STATUS_CHOICES = ['Activo', 'Inactivo', 'Vacaciones', 'Licencia'];\nfunction UserForm({\n  user,\n  onClose,\n  onSubmit,\n  roles\n}) {\n  _s();\n  // Asegúrate de recibir 'roles' y 'onSubmit'\n  const isEditing = !!user;\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    puesto: '',\n    departamento: '',\n    // ID del departamento (puede ser un número o una cadena vacía)\n    region: '',\n    // ID de la región (puede ser un número o una cadena vacía)\n    status: 'Activo',\n    assigned_role_id: '',\n    is_staff: false,\n    is_superuser: false\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // ESTADO PARA DATOS MAESTROS (NUEVO)\n  const [regions, setRegions] = useState([]);\n  const [departamentos, setDepartamentos] = useState([]);\n  useEffect(() => {\n    // Función para cargar los datos maestros\n    const fetchMasterData = async () => {\n      try {\n        // Usamos Promise.all para cargar regiones y departamentos en paralelo\n        const [regionsResponse, departamentosResponse] = await Promise.all([getRegions(), getDepartamentos()]);\n        setRegions(regionsResponse.data);\n        setDepartamentos(departamentosResponse.data);\n      } catch (err) {\n        console.error(\"Error al cargar datos maestros:\", err);\n        toast.error(\"Error al cargar las listas de Regiones y Departamentos.\");\n      }\n    };\n    fetchMasterData();\n    if (isEditing) {\n      // Lógica existente para precargar datos de usuario\n      // Asegúrate de que los campos 'departamento' y 'region' sean el ID\n      setFormData({\n        username: user.username || '',\n        email: user.email || '',\n        password: '',\n        // Nunca precargar la contraseña\n        first_name: user.first_name || '',\n        last_name: user.last_name || '',\n        puesto: user.puesto || '',\n        // IMPORTANTE: Asignar el ID (user.departamento) o null/vacío\n        departamento: user.departamento || '',\n        // user.departamento es el ID\n        region: user.region || '',\n        // user.region es el ID\n        status: user.status || 'Activo',\n        assigned_role_id: user.role_id || '',\n        // Asume que role_id es el ID del grupo\n        is_staff: user.is_staff || false,\n        is_superuser: user.is_superuser || false\n      });\n    }\n  }, [user, isEditing]);\n\n  // MANEJO DE CAMBIOS (ACTUALIZADO)\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    let newValue = value;\n\n    // Convertir el valor de los SELECTs a entero o null si se selecciona la opción vacía\n    if (name === 'departamento' || name === 'region') {\n      // Si el valor es una cadena vacía (''), significa que se seleccionó 'N/A' (sin asignar).\n      // Lo convertimos a null (o mantenemos la cadena vacía, que es un valor falsy aceptable)\n      // Ya que los FKs en Django son null=True, null es preferible, pero '' también funciona en este contexto.\n      // Para simplificar, si el valor es '', lo asignamos como '', si no, lo parseamos a entero.\n      // NOTA: Si Django REST Framework acepta 'null' en el payload, puedes usar: \n      // newValue = value === '' ? null : parseInt(value, 10);\n      newValue = value === '' ? '' : parseInt(value, 10);\n    }\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : newValue\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    if (!isEditing && formData.password.length < 8) {\n      setError('La contraseña debe tener al menos 8 caracteres.');\n      toast.error('La contraseña debe tener al menos 8 caracteres.');\n      return;\n    }\n\n    // Crear una copia de los datos, excluyendo la contraseña si estamos editando y no se ha cambiado\n    const dataToSend = {\n      ...formData\n    };\n    if (isEditing && !formData.password) {\n      delete dataToSend.password;\n    }\n\n    // Convertir assigned_role_id de cadena a array de IDs si existe\n    if (dataToSend.assigned_role_id) {\n      dataToSend.assigned_role_id = [parseInt(dataToSend.assigned_role_id, 10)];\n    } else {\n      // Si no hay rol seleccionado, enviar un array vacío o manejar el caso según la lógica del backend\n      dataToSend.assigned_role_id = [];\n    }\n    setLoading(true);\n    // La función onSubmit (recibida como prop) debe manejar la lógica de la API (crear o actualizar)\n    onSubmit(dataToSend).then(() => {\n      setLoading(false);\n      onClose();\n    }).catch(err => {\n      var _err$response, _err$response$data, _err$response$data$us;\n      console.error(err);\n      setError('Error al guardar el usuario. Verifica los datos.');\n      toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$us = _err$response$data.username) === null || _err$response$data$us === void 0 ? void 0 : _err$response$data$us[0]) || 'Error al guardar el usuario. Verifica los datos.');\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"departamento\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Departamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"departamento\",\n        name: \"departamento\",\n        value: formData.departamento || '' // Usa || '' para manejar null/undefined y que funcione con la opción vacía\n        ,\n        onChange: handleChange,\n        className: \"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-blue-500 focus:border-blue-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Sin Departamento --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), departamentos.map(dpto => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dpto.id,\n          children: dpto.name\n        }, dpto.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"region\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Regi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"region\",\n        name: \"region\",\n        value: formData.region || '' // Usa || '' para manejar null/undefined y que funcione con la opción vacía\n        ,\n        onChange: handleChange,\n        className: \"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-blue-500 focus:border-blue-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Sin Regi\\xF3n --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region.id,\n          children: region.name\n        }, region.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"puesto\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Puesto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"puesto\",\n        name: \"puesto\",\n        value: formData.puesto,\n        onChange: handleChange,\n        className: \"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-blue-500 focus:border-blue-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Seleccionar Puesto --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), PUESTO_CHOICES.map(choice => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: choice,\n          children: choice\n        }, choice, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end space-x-3 mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\",\n        children: loading ? 'Guardando...' : isEditing ? 'Actualizar Usuario' : 'Crear Usuario'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n_s(UserForm, \"AoTEyufMQJNttpXHTrdj+HDz4fY=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","api","getRegions","getDepartamentos","toast","jsxDEV","_jsxDEV","PUESTO_CHOICES","STATUS_CHOICES","UserForm","user","onClose","onSubmit","roles","_s","isEditing","formData","setFormData","username","email","password","first_name","last_name","puesto","departamento","region","status","assigned_role_id","is_staff","is_superuser","error","setError","loading","setLoading","regions","setRegions","departamentos","setDepartamentos","fetchMasterData","regionsResponse","departamentosResponse","Promise","all","data","err","console","role_id","handleChange","e","name","value","type","checked","target","newValue","parseInt","prev","handleSubmit","preventDefault","length","dataToSend","then","catch","_err$response","_err$response$data","_err$response$data$us","response","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","dpto","choice","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Proyectos/ITAM_System/itam_frontend/src/components/UserForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// IMPORTANTE: Asumimos que has cambiado el import de axiosConfig a api para usar las funciones definidas\r\nimport api from '../api'; \r\nimport { getRegions, getDepartamentos } from '../api'; // Importa las nuevas funciones\r\nimport { toast } from 'react-toastify';\r\n\r\n// Opciones para los campos de selección estáticos\r\nconst PUESTO_CHOICES = [\r\n    'Gerente', 'Coordinador', 'Analista', 'Técnico', 'Desarrollador', 'Soporte', 'Otro'\r\n];\r\nconst STATUS_CHOICES = [\r\n    'Activo', 'Inactivo', 'Vacaciones', 'Licencia'\r\n];\r\n\r\nfunction UserForm({ user, onClose, onSubmit, roles }) { // Asegúrate de recibir 'roles' y 'onSubmit'\r\n    const isEditing = !!user;\r\n\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        puesto: '',\r\n        departamento: '', // ID del departamento (puede ser un número o una cadena vacía)\r\n        region: '',       // ID de la región (puede ser un número o una cadena vacía)\r\n        status: 'Activo',\r\n        assigned_role_id: '',\r\n        is_staff: false,\r\n        is_superuser: false,\r\n    });\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    // ESTADO PARA DATOS MAESTROS (NUEVO)\r\n    const [regions, setRegions] = useState([]);\r\n    const [departamentos, setDepartamentos] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        // Función para cargar los datos maestros\r\n        const fetchMasterData = async () => {\r\n            try {\r\n                // Usamos Promise.all para cargar regiones y departamentos en paralelo\r\n                const [regionsResponse, departamentosResponse] = await Promise.all([\r\n                    getRegions(),\r\n                    getDepartamentos()\r\n                ]);\r\n                setRegions(regionsResponse.data);\r\n                setDepartamentos(departamentosResponse.data);\r\n            } catch (err) {\r\n                console.error(\"Error al cargar datos maestros:\", err);\r\n                toast.error(\"Error al cargar las listas de Regiones y Departamentos.\");\r\n            }\r\n        };\r\n\r\n        fetchMasterData();\r\n\r\n        if (isEditing) {\r\n            // Lógica existente para precargar datos de usuario\r\n            // Asegúrate de que los campos 'departamento' y 'region' sean el ID\r\n            setFormData({\r\n                username: user.username || '',\r\n                email: user.email || '',\r\n                password: '', // Nunca precargar la contraseña\r\n                first_name: user.first_name || '',\r\n                last_name: user.last_name || '',\r\n                puesto: user.puesto || '',\r\n                // IMPORTANTE: Asignar el ID (user.departamento) o null/vacío\r\n                departamento: user.departamento || '', // user.departamento es el ID\r\n                region: user.region || '',           // user.region es el ID\r\n                status: user.status || 'Activo',\r\n                assigned_role_id: user.role_id || '', // Asume que role_id es el ID del grupo\r\n                is_staff: user.is_staff || false,\r\n                is_superuser: user.is_superuser || false,\r\n            });\r\n        }\r\n    }, [user, isEditing]);\r\n\r\n    // MANEJO DE CAMBIOS (ACTUALIZADO)\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        let newValue = value;\r\n        \r\n        // Convertir el valor de los SELECTs a entero o null si se selecciona la opción vacía\r\n        if (name === 'departamento' || name === 'region') {\r\n            // Si el valor es una cadena vacía (''), significa que se seleccionó 'N/A' (sin asignar).\r\n            // Lo convertimos a null (o mantenemos la cadena vacía, que es un valor falsy aceptable)\r\n            // Ya que los FKs en Django son null=True, null es preferible, pero '' también funciona en este contexto.\r\n            // Para simplificar, si el valor es '', lo asignamos como '', si no, lo parseamos a entero.\r\n            // NOTA: Si Django REST Framework acepta 'null' en el payload, puedes usar: \r\n            // newValue = value === '' ? null : parseInt(value, 10);\r\n            newValue = value === '' ? '' : parseInt(value, 10);\r\n        }\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: type === 'checkbox' ? checked : newValue,\r\n        }));\r\n    };\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        if (!isEditing && formData.password.length < 8) {\r\n            setError('La contraseña debe tener al menos 8 caracteres.');\r\n            toast.error('La contraseña debe tener al menos 8 caracteres.');\r\n            return;\r\n        }\r\n\r\n        // Crear una copia de los datos, excluyendo la contraseña si estamos editando y no se ha cambiado\r\n        const dataToSend = { ...formData };\r\n        if (isEditing && !formData.password) {\r\n            delete dataToSend.password;\r\n        }\r\n\r\n        // Convertir assigned_role_id de cadena a array de IDs si existe\r\n        if (dataToSend.assigned_role_id) {\r\n            dataToSend.assigned_role_id = [parseInt(dataToSend.assigned_role_id, 10)];\r\n        } else {\r\n            // Si no hay rol seleccionado, enviar un array vacío o manejar el caso según la lógica del backend\r\n            dataToSend.assigned_role_id = [];\r\n        }\r\n\r\n        setLoading(true);\r\n        // La función onSubmit (recibida como prop) debe manejar la lógica de la API (crear o actualizar)\r\n        onSubmit(dataToSend)\r\n            .then(() => {\r\n                setLoading(false);\r\n                onClose();\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                setError('Error al guardar el usuario. Verifica los datos.');\r\n                toast.error(err.response?.data?.username?.[0] || 'Error al guardar el usuario. Verifica los datos.');\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            {/* ... Otros campos ... */}\r\n            \r\n            {/* DEPARTAMENTO (CAMBIADO A SELECT) */}\r\n            <div>\r\n                <label htmlFor=\"departamento\" className=\"block text-sm font-medium text-gray-700\">Departamento</label>\r\n                <select\r\n                    id=\"departamento\"\r\n                    name=\"departamento\"\r\n                    value={formData.departamento || ''} // Usa || '' para manejar null/undefined y que funcione con la opción vacía\r\n                    onChange={handleChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                >\r\n                    <option value=\"\">-- Sin Departamento --</option> \r\n                    {departamentos.map(dpto => (\r\n                        <option key={dpto.id} value={dpto.id}>\r\n                            {dpto.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* REGIÓN (CAMBIADO A SELECT) */}\r\n            <div>\r\n                <label htmlFor=\"region\" className=\"block text-sm font-medium text-gray-700\">Región</label>\r\n                <select\r\n                    id=\"region\"\r\n                    name=\"region\"\r\n                    value={formData.region || ''} // Usa || '' para manejar null/undefined y que funcione con la opción vacía\r\n                    onChange={handleChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                >\r\n                    <option value=\"\">-- Sin Región --</option>\r\n                    {regions.map(region => (\r\n                        <option key={region.id} value={region.id}>\r\n                            {region.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            \r\n            {/* ... El resto de los campos ... */}\r\n            \r\n            {/* Campo Puesto (opcional, si quieres que también sea un select) */}\r\n            <div>\r\n                <label htmlFor=\"puesto\" className=\"block text-sm font-medium text-gray-700\">Puesto</label>\r\n                <select\r\n                    id=\"puesto\"\r\n                    name=\"puesto\"\r\n                    value={formData.puesto}\r\n                    onChange={handleChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                >\r\n                    <option value=\"\">-- Seleccionar Puesto --</option>\r\n                    {PUESTO_CHOICES.map(choice => (\r\n                        <option key={choice} value={choice}>{choice}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* ... Resto del formulario y botones ... */}\r\n            <div className=\"flex justify-end space-x-3 mt-6\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={onClose}\r\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                >\r\n                    Cancelar\r\n                </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n                >\r\n                    {loading ? 'Guardando...' : (isEditing ? 'Actualizar Usuario' : 'Crear Usuario')}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UserForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}