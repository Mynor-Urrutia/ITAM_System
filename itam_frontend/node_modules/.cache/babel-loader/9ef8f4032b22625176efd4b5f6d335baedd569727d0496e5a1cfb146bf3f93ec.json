{"ast":null,"code":"// C:\\Proyectos\\ITAM_System\\itam_frontend\\src\\api.js\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode'; // Make sure you have jwt-decode installed\n\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api/',\n  // Your Django API base URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to attach JWT token\napi.interceptors.request.use(config => {\n  const accessToken = localStorage.getItem('access_token'); // Make sure this key matches\n  console.log('API Interceptor: Access Token from localStorage:', accessToken ? accessToken.substring(0, 30) + '...' : 'No token'); // Log del token (parcial)\n  if (accessToken) {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  // If the error is 401 Unauthorized and it's not a login/refresh request\n  // and we haven't tried to refresh yet for this request\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true; // Mark as retried\n    const refreshToken = localStorage.getItem('refresh_token'); // Make sure this key matches\n\n    if (refreshToken) {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/api/login/refresh/', {\n          refresh: refreshToken\n        });\n        const newAccessToken = response.data.access;\n        localStorage.setItem('access_token', newAccessToken);\n\n        // Update the original request's header with the new token\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n        return api(originalRequest); // Retry the original request with the new token\n      } catch (refreshError) {\n        // If refreshing fails, clear tokens and redirect to login\n        console.error('Token refresh failed:', refreshError);\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user_data'); // Clear user data as well\n        window.location.href = '/login'; // Redirect to login page\n        return Promise.reject(refreshError);\n      }\n    } else {\n      // No refresh token available, redirect to login\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user_data');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// --- Funciones para la gestión de Regiones (ya deberían existir) ---\n// Si no las tienes en este archivo, puedes añadirlas aquí o en otro archivo de servicios\nexport const getRegions = (params = {}) => api.get('masterdata/regions/', {\n  params\n});\nexport const createRegion = regionData => api.post('masterdata/regions/', regionData);\nexport const updateRegion = (id, regionData) => api.put(`masterdata/regions/${id}/`, regionData);\nexport const deleteRegion = id => api.delete(`masterdata/regions/${id}/`);\n\n// --- Funciones para la gestión de Fincas ---\nexport const getFincas = (params = {}) => api.get('masterdata/fincas/', {\n  params\n});\nexport const createFinca = fincaData => api.post('masterdata/fincas/', fincaData);\nexport const updateFinca = (id, fincaData) => api.put(`masterdata/fincas/${id}/`, fincaData);\nexport const deleteFinca = id => api.delete(`masterdata/fincas/${id}/`);\n\n// --- ¡NUEVAS FUNCIONES PARA DEPARTAMENTOS! ---\nexport const getDepartamentos = (params = {}) => api.get('masterdata/departamentos/', {\n  params\n});\nexport const createDepartamento = departamentoData => api.post('masterdata/departamentos/', departamentoData);\nexport const updateDepartamento = (id, departamentoData) => api.put(`masterdata/departamentos/${id}/`, departamentoData);\nexport const deleteDepartamento = id => api.delete(`masterdata/departamentos/${id}/`);\n\n// --- ¡NUEVAS FUNCIONES PARA ÁREAS! ---\nexport const getAreas = (params = {}) => api.get('masterdata/areas/', {\n  params\n});\nexport const createArea = areaData => api.post('masterdata/areas/', areaData);\nexport const updateArea = (id, areaData) => api.put(`masterdata/areas/${id}/`, areaData);\nexport const deleteArea = id => api.delete(`masterdata/areas/${id}/`);\n\n// --- Funciones para la gestión de Tipos de Activos ---\nexport const getTiposActivos = (params = {}) => api.get('masterdata/tipos-activos/', {\n  params\n});\nexport const createTipoActivo = tipoActivoData => api.post('masterdata/tipos-activos/', tipoActivoData);\nexport const updateTipoActivo = (id, tipoActivoData) => api.put(`masterdata/tipos-activos/${id}/`, tipoActivoData);\nexport const deleteTipoActivo = id => api.delete(`masterdata/tipos-activos/${id}/`);\n\n// Marcas\nexport const getMarcas = (params = {}) => api.get('/masterdata/marcas/', {\n  params\n});\nexport const createMarca = data => api.post('/masterdata/marcas/', data);\nexport const updateMarca = (id, data) => api.put(`/masterdata/marcas/${id}/`, data);\nexport const deleteMarca = id => api.delete(`/masterdata/marcas/${id}/`);\n\n// --- Funciones para la gestión de Modelos de Activos ---\nexport const getModelosActivo = (params = {}) => api.get('/masterdata/modelos-activo/', {\n  params\n});\nexport const createModeloActivo = data => api.post('/masterdata/modelos-activo/', data);\nexport const updateModeloActivo = (id, data) => api.put(`/masterdata/modelos-activo/${id}/`, data);\nexport const deleteModeloActivo = id => api.delete(`/masterdata/modelos-activo/${id}/`);\n\n// --- Funciones para la gestión de Usuarios ---\nexport const getUsers = (params = {}) => api.get('/users/', {\n  params\n});\nexport const createUser = userData => api.post('/users/', userData);\nexport const updateUser = (id, userData) => api.put(`/users/${id}/`, userData);\nexport const deleteUser = id => api.delete(`/users/${id}/`);\nexport const getCurrentUser = () => api.get('/users/me/');\nexport const changeUserPassword = (id, passwordData) => api.post(`/users/${id}/change-password/`, passwordData);\n\n// --- Funciones para la gestión de Roles ---\nexport const getRoles = (params = {}) => api.get('/roles/', {\n  params\n});\nexport const createRole = roleData => api.post('/roles/', roleData);\nexport const updateRole = (id, roleData) => api.put(`/roles/${id}/`, roleData);\nexport const deleteRole = id => api.delete(`/roles/${id}/`);\n\n// --- Funciones para la gestión de Permisos ---\nexport const getPermissions = (params = {}) => api.get('/permissions/', {\n  params\n});\n\n// --- Funciones para la gestión de Audit Logs ---\nexport const getAuditLogs = (params = {}) => api.get('/masterdata/audit-logs/', {\n  params\n});\nexport default api;","map":{"version":3,"names":["axios","jwtDecode","api","create","baseURL","headers","interceptors","request","use","config","accessToken","localStorage","getItem","console","log","substring","Authorization","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","post","refresh","newAccessToken","data","access","setItem","refreshError","removeItem","window","location","href","getRegions","params","get","createRegion","regionData","updateRegion","id","put","deleteRegion","delete","getFincas","createFinca","fincaData","updateFinca","deleteFinca","getDepartamentos","createDepartamento","departamentoData","updateDepartamento","deleteDepartamento","getAreas","createArea","areaData","updateArea","deleteArea","getTiposActivos","createTipoActivo","tipoActivoData","updateTipoActivo","deleteTipoActivo","getMarcas","createMarca","updateMarca","deleteMarca","getModelosActivo","createModeloActivo","updateModeloActivo","deleteModeloActivo","getUsers","createUser","userData","updateUser","deleteUser","getCurrentUser","changeUserPassword","passwordData","getRoles","createRole","roleData","updateRole","deleteRole","getPermissions","getAuditLogs"],"sources":["C:/Proyectos/ITAM_System/itam_frontend/src/api.js"],"sourcesContent":["// C:\\Proyectos\\ITAM_System\\itam_frontend\\src\\api.js\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode'; // Make sure you have jwt-decode installed\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000/api/', // Your Django API base URL\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// Request interceptor to attach JWT token\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const accessToken = localStorage.getItem('access_token'); // Make sure this key matches\r\n        console.log('API Interceptor: Access Token from localStorage:', accessToken ? accessToken.substring(0, 30) + '...' : 'No token'); // Log del token (parcial)\r\n        if (accessToken) {\r\n            config.headers.Authorization = `Bearer ${accessToken}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor to handle token refresh\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    async (error) => {\r\n        const originalRequest = error.config;\r\n        // If the error is 401 Unauthorized and it's not a login/refresh request\r\n        // and we haven't tried to refresh yet for this request\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            originalRequest._retry = true; // Mark as retried\r\n            const refreshToken = localStorage.getItem('refresh_token'); // Make sure this key matches\r\n\r\n            if (refreshToken) {\r\n                try {\r\n                    const response = await axios.post('http://127.0.0.1:8000/api/login/refresh/', {\r\n                        refresh: refreshToken,\r\n                    });\r\n                    const newAccessToken = response.data.access;\r\n                    localStorage.setItem('access_token', newAccessToken);\r\n\r\n                    // Update the original request's header with the new token\r\n                    originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n                    return api(originalRequest); // Retry the original request with the new token\r\n                } catch (refreshError) {\r\n                    // If refreshing fails, clear tokens and redirect to login\r\n                    console.error('Token refresh failed:', refreshError);\r\n                    localStorage.removeItem('access_token');\r\n                    localStorage.removeItem('refresh_token');\r\n                    localStorage.removeItem('user_data'); // Clear user data as well\r\n                    window.location.href = '/login'; // Redirect to login page\r\n                    return Promise.reject(refreshError);\r\n                }\r\n            } else {\r\n                // No refresh token available, redirect to login\r\n                localStorage.removeItem('access_token');\r\n                localStorage.removeItem('refresh_token');\r\n                localStorage.removeItem('user_data');\r\n                window.location.href = '/login';\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// --- Funciones para la gestión de Regiones (ya deberían existir) ---\r\n// Si no las tienes en este archivo, puedes añadirlas aquí o en otro archivo de servicios\r\nexport const getRegions = (params = {}) => api.get('masterdata/regions/', { params });\r\nexport const createRegion = (regionData) => api.post('masterdata/regions/', regionData);\r\nexport const updateRegion = (id, regionData) => api.put(`masterdata/regions/${id}/`, regionData);\r\nexport const deleteRegion = (id) => api.delete(`masterdata/regions/${id}/`);\r\n\r\n// --- Funciones para la gestión de Fincas ---\r\nexport const getFincas = (params = {}) => api.get('masterdata/fincas/', { params });\r\nexport const createFinca = (fincaData) => api.post('masterdata/fincas/', fincaData);\r\nexport const updateFinca = (id, fincaData) => api.put(`masterdata/fincas/${id}/`, fincaData);\r\nexport const deleteFinca = (id) => api.delete(`masterdata/fincas/${id}/`);\r\n\r\n// --- ¡NUEVAS FUNCIONES PARA DEPARTAMENTOS! ---\r\nexport const getDepartamentos = (params = {}) => api.get('masterdata/departamentos/', { params });\r\nexport const createDepartamento = (departamentoData) => api.post('masterdata/departamentos/', departamentoData);\r\nexport const updateDepartamento = (id, departamentoData) => api.put(`masterdata/departamentos/${id}/`, departamentoData);\r\nexport const deleteDepartamento = (id) => api.delete(`masterdata/departamentos/${id}/`);\r\n\r\n// --- ¡NUEVAS FUNCIONES PARA ÁREAS! ---\r\nexport const getAreas = (params = {}) => api.get('masterdata/areas/', { params });\r\nexport const createArea = (areaData) => api.post('masterdata/areas/', areaData);\r\nexport const updateArea = (id, areaData) => api.put(`masterdata/areas/${id}/`, areaData);\r\nexport const deleteArea = (id) => api.delete(`masterdata/areas/${id}/`);\r\n\r\n// --- Funciones para la gestión de Tipos de Activos ---\r\nexport const getTiposActivos = (params = {}) => api.get('masterdata/tipos-activos/', { params });\r\nexport const createTipoActivo = (tipoActivoData) => api.post('masterdata/tipos-activos/', tipoActivoData);\r\nexport const updateTipoActivo = (id, tipoActivoData) => api.put(`masterdata/tipos-activos/${id}/`, tipoActivoData);\r\nexport const deleteTipoActivo = (id) => api.delete(`masterdata/tipos-activos/${id}/`);\r\n\r\n// Marcas\r\nexport const getMarcas = (params = {}) => api.get('/masterdata/marcas/', { params });\r\nexport const createMarca = (data) => api.post('/masterdata/marcas/', data);\r\nexport const updateMarca = (id, data) => api.put(`/masterdata/marcas/${id}/`, data);\r\nexport const deleteMarca = (id) => api.delete(`/masterdata/marcas/${id}/`);\r\n\r\n// --- Funciones para la gestión de Modelos de Activos ---\r\nexport const getModelosActivo = (params = {}) => api.get('/masterdata/modelos-activo/', { params });\r\nexport const createModeloActivo = (data) => api.post('/masterdata/modelos-activo/', data);\r\nexport const updateModeloActivo = (id, data) => api.put(`/masterdata/modelos-activo/${id}/`, data);\r\nexport const deleteModeloActivo = (id) => api.delete(`/masterdata/modelos-activo/${id}/`);\r\n\r\n// --- Funciones para la gestión de Usuarios ---\r\nexport const getUsers = (params = {}) => api.get('/users/', { params });\r\nexport const createUser = (userData) => api.post('/users/', userData);\r\nexport const updateUser = (id, userData) => api.put(`/users/${id}/`, userData);\r\nexport const deleteUser = (id) => api.delete(`/users/${id}/`);\r\nexport const getCurrentUser = () => api.get('/users/me/');\r\nexport const changeUserPassword = (id, passwordData) => api.post(`/users/${id}/change-password/`, passwordData);\r\n\r\n// --- Funciones para la gestión de Roles ---\r\nexport const getRoles = (params = {}) => api.get('/roles/', { params });\r\nexport const createRole = (roleData) => api.post('/roles/', roleData);\r\nexport const updateRole = (id, roleData) => api.put(`/roles/${id}/`, roleData);\r\nexport const deleteRole = (id) => api.delete(`/roles/${id}/`);\r\n\r\n// --- Funciones para la gestión de Permisos ---\r\nexport const getPermissions = (params = {}) => api.get('/permissions/', { params });\r\n\r\n// --- Funciones para la gestión de Audit Logs ---\r\nexport const getAuditLogs = (params = {}) => api.get('/masterdata/audit-logs/', { params });\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}